<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Buffalo.Kernel</name>
    </assembly>
    <members>
        <member name="T:Buffalo.Kernel.Win32.WindowsAPI">
            <summary>
            Windows API Functions
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.GetForegroundWindow">
            <summary>
            获取当前系统的活动窗口
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.SystemParametersInfo(Buffalo.Kernel.Win32.SPIAction,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            数查询或设置系统级参数
            </summary>
            <param name="uAction">设置动作</param>
            <param name="uParam">参数</param>
            <param name="lpvParam"></param>
            <param name="fuWinIni"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.GetWindowThreadProcessId(System.IntPtr,System.Int32@)">
            <summary>
            获取窗体所在的进程
            </summary>
            <param name="hwnd">指定窗口句柄</param>
            <param name="lpdwProcessId">返回进程id</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.AttachThreadInput(System.Int32,System.Int32,System.Int32)">
            <summary>
            绑定线程输入
            </summary>
            <param name="idAttach">欲连接线程的标识符（ID）</param>
            <param name="idAttachTo">与idAttach线程连接的另一个线程的标识符</param>
            <param name="fAttach">TRUE（非零）连接，FALSE撤消连接</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.SHGetMalloc(System.IntPtr@)">
            <summary>
            Retrieves a pointer to the Shell's IMalloc interface.
            </summary>
            <param name="hObject">Address of a pointer that receives the Shell's IMalloc interface pointer.</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.SHGetFolderLocation(System.IntPtr,System.Int32,System.IntPtr,System.UInt32,System.IntPtr@)">
            <summary>
            Retrieves the path of a folder as an PIDL.
            </summary>
            <param name="hwndOwner">Handle to the owner window.</param>
            <param name="nFolder">A CSIDL value that identifies the folder to be located</param>
            <param name="hToken">Token that can be used to represent a particular user</param>
            <param name="dwReserved">Reserved</param>
            <param name="ppidl">Address of a pointer to an item identifier list structure specifying the folder's location relative to the root of the namespace (the desktop).</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.SHGetPathFromIDList(System.IntPtr,System.Text.StringBuilder)">
            <summary>
            Converts an item identifier list to a file system path. 
            </summary>
            <param name="pidl">Address of an item identifier list that specifies a file or directory location relative to the root of the namespace (the desktop). </param>
            <param name="pszPath">Address of a buffer to receive the file system path.</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.SHGetFolderPath(System.IntPtr,System.Int32,System.IntPtr,System.UInt32,System.Text.StringBuilder)">
            <summary>
            Takes the CSIDL of a folder and returns the pathname.
            </summary>
            <param name="hwndOwner">Handle to an owner window.</param>
            <param name="nFolder">A CSIDL value that identifies the folder whose path is to be retrieved.</param>
            <param name="hToken">An access token that can be used to represent a particular user.</param>
            <param name="dwFlags">Flags to specify which path is to be returned. It is used for cases where the folder associated with a CSIDL may be moved or renamed by the user. </param>
            <param name="pszPath">Pointer to a null-terminated string which will receive the path.</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.SHParseDisplayName(System.String,System.IntPtr,System.IntPtr@,System.UInt32,System.UInt32@)">
            <summary>
            Translates a Shell namespace object's display name into an item 
            identifier list and returns the attributes of the object. This function is 
            the preferred method to convert a string to a pointer to an item identifier 
            list (PIDL). 
            </summary>
            <param name="pszName">Pointer to a zero-terminated wide string that contains the display name  to parse. </param>
            <param name="pBndContext">Optional bind context that controls the parsing operation. This parameter is normally set to NULL.</param>
            <param name="ppidl">Address of a pointer to a variable of type ITEMIDLIST that receives the item identifier list for the object.</param>
            <param name="AttrToQuery">ULONG value that specifies the attributes to query.</param>
            <param name="ResultAttr">Pointer to a ULONG. On return, those attributes that are true for the object and were requested in AttrToQuery will be set. </param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.SHGetDesktopFolder(System.IntPtr@)">
            <summary>
            Retrieves the IShellFolder interface for the desktop folder,
            which is the root of the Shell's namespace. 
            </summary>
            <param name="ppshf">Address that receives an IShellFolder interface pointer for the desktop folder.</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.SHBindToParent(System.IntPtr,System.Guid,System.IntPtr@,System.IntPtr@)">
            <summary>
            This function takes the fully-qualified pointer to an item
            identifier list (PIDL) of a namespace object, and returns a specified
            interface pointer on the parent object.
            </summary>
            <param name="pidl">The item's PIDL. </param>
            <param name="riid">The REFIID of one of the interfaces exposed by the item's parent object.</param>
            <param name="ppv">A pointer to the interface specified by riid. You must release the object when you are finished.</param>
            <param name="ppidlLast">// The item's PIDL relative to the parent folder. This PIDL can be used with many of the methods supported by the parent folder's interfaces. If you set ppidlLast to NULL, the PIDL will not be returned. </param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.StrRetToBSTR(Buffalo.Kernel.Win32.STRRET@,System.IntPtr,System.String@)">
            <summary>
            Accepts a STRRET structure returned by
            ShellFolder::GetDisplayNameOf that contains or points to a string, and then
            returns that string as a BSTR.
            </summary>
            <param name="pstr">Pointer to a STRRET structure.</param>
            <param name="pidl">Pointer to an ITEMIDLIST uniquely identifying a file object or subfolder relative to the parent folder.</param>
            <param name="pbstr">Pointer to a variable of type BSTR that contains the converted string.</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.StrRetToBuf(Buffalo.Kernel.Win32.STRRET@,System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Takes a STRRET structure returned by IShellFolder::GetDisplayNameOf,
            converts it to a string, and places the result in a buffer. 
            </summary>
            <param name="pstr">Pointer to the STRRET structure. When the function returns, this pointer will no longer be valid.</param>
            <param name="pidl">Pointer to the item's ITEMIDLIST structure.</param>
            <param name="pszBuf">Buffer to hold the display name. It will be returned as a null-terminated string. If cchBuf is too small, the name will be truncated to fit.</param>
            <param name="cchBuf">Size of pszBuf, in characters. If cchBuf is too small, the string will be truncated to fit. </param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.SHBrowseForFolder(Buffalo.Kernel.Win32.BROWSEINFO@)">
            <summary>
            Displays a dialog box that enables the user to select a Shell folder. 
            </summary>
            <param name="lbpi">// Pointer to a BROWSEINFO structure that contains information used to display the dialog box.</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.SetThreadContext(System.IntPtr,Buffalo.Kernel.Win32.CONTEXT@)">
            <summary>
            设置线程信息
            </summary>
            <param name="hThread"></param>
            <param name="lpContext"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.GetThreadContext(System.IntPtr,Buffalo.Kernel.Win32.CONTEXT@)">
            <summary>
            获取线程信息
            </summary>
            <param name="hThread"></param>
            <param name="lpContext"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.ReadProcessMemory(System.IntPtr,System.IntPtr,System.Byte[],System.Int32,System.UInt32@)">
            <summary>
            读取进程内存
            </summary>
            <param name="hProcess">进程句柄</param>
            <param name="lpBaseAddress">基地址</param>
            <param name="lpBuffer">缓冲</param>
            <param name="nSize">要读的字节数</param>
            <param name="lpNumberOfBytesWritten">实际读出的字节数</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.WriteProcessMemory(System.IntPtr,System.IntPtr,System.Byte[],System.Int32,System.UInt32@)">
            <summary>
            写入进程内存
            </summary>
            <param name="hProcess">进程句柄</param>
            <param name="lpBaseAddress">基地址</param>
            <param name="lpBuffer">缓冲</param>
            <param name="nSize">要写入的字节数</param>
            <param name="lpNumberOfBytesWritten">真正写入的字节数</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.SuspendThread(System.IntPtr)">
            <summary>
            挂起线程
            </summary>
            <param name="hThread">线程句柄</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.ResumeThread(System.IntPtr)">
            <summary>
            继续线程
            </summary>
            <param name="hThread">线程句柄</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Win32.WindowsAPI.CreateService(System.IntPtr,System.String,System.String,Buffalo.Kernel.Win32.ServicesAccessType,System.ServiceProcess.ServiceType,Buffalo.Kernel.Win32.ServicesStartType,Buffalo.Kernel.Win32.ServicesErrorControl,System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            创建服务
            </summary>
            <param name="hSCManager">SCManager 数据库</param>
            <param name="lpServiceName">服务名</param>
            <param name="lpDisplayName">显示名</param>
            <param name="dwDesiredAccess"></param>
            <param name="dwServiceType"></param>
            <param name="dwStartType"></param>
            <param name="dwErrorControl"></param>
            <param name="lpBinaryPathName">文件路径</param>
            <param name="lpLoadOrderGroup"></param>
            <param name="lpdwTagId"></param>
            <param name="lpDependencies"></param>
            <param name="lp">本地用户名</param>
            <param name="lpPassword">本地用户密码</param>
            <returns></returns>
        </member>
        <member name="T:Buffalo.Kernel.SmartSellMap.ICombinationItem">
            <summary>
            组合项
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.SmartSellMap.ICombinationItem.GetConsume">
            <summary>
            获取消耗
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.SmartSellMap.ICombinationItem.GetPoint">
            <summary>
            获取得分
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Picture.ScopeSize(System.Int32,System.Int32,System.Drawing.Size)">
            <summary>
            规范尺寸
            </summary>
            <param name="maxWidth">最大宽度</param>
            <param name="maxHeight">最大高度</param>
            <param name="size">待规范的尺寸</param>
        </member>
        <member name="M:Buffalo.Kernel.Picture.ReSizePictureInScope(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            把图片转换大小(大小不能超过指定值)
            </summary>
            <param name="img"></param>
            <param name="maxWidth"></param>
            <param name="maxHeight"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Picture.PictureToBytes(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            把图片流转成字节
            </summary>
            <param name="fileStm">图片流</param>
            <param name="width">转换后的宽度</param>
            <param name="height">转换后的高度</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Picture.PictureToBytes(System.Drawing.Image)">
            <summary>
            把图片转换成字节
            </summary>
            <param name="img">图片</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Picture.GetEncoder(System.Drawing.Imaging.ImageFormat)">
            <summary>
            获取特定的图像编解码信息
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Picture.PictureToBytes(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            把图片转换成字节
            </summary>
            <param name="img">图片</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Picture.PictureToBytes(System.Drawing.Image,System.Drawing.Imaging.ImageCodecInfo,System.Int64)">
            <summary>
            图片转换为字节
            </summary>
            <param name="img">图片</param>
            <param name="codeInfo">编码</param>
            <param name="qty">质量</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Picture.WhitePictureToStream(System.IO.Stream,System.Drawing.Image,System.Drawing.Imaging.ImageCodecInfo,System.Int64)">
            <summary>
            把图片写入流
            </summary>
            <param name="img"></param>
            <param name="codeInfo"></param>
            <param name="qty"></param>
        </member>
        <member name="M:Buffalo.Kernel.Picture.BytesToPicture(System.Byte[])">
            <summary>
            把字节转换为图片
            </summary>
            <param name="byteImage">图片字节</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Picture.ReSizePicturee(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            变换图片大小
            </summary>
            <param name="img">源图片</param>
            <param name="width">变换后的宽</param>
            <param name="height">变换后的高</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Picture.ReadFile(System.String)">
            <summary>
            读取文件
            </summary>
            <param name="root">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Picture.ChangeSize(System.Drawing.Image,System.Drawing.Size)">
            <summary>
            改变图片尺寸
            </summary>
            <param name="originalImage">源图片</param>
            <param name="picSize">尺寸</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Picture.GetEncoderInfo(System.String)">
            <summary>
            获取编码信息
            </summary>
            <param name="mimeType">类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Picture.SaveImage(System.IO.Stream,System.String)">
            <summary>
            原样保存图片，不做任何格式修改
            </summary>
            <param name="stmImg">图片流</param>
            <param name="root">保存路径</param>
        </member>
        <member name="M:Buffalo.Kernel.OrderSortList`2.#ctor(Buffalo.Kernel.SortListOrderType)">
            <summary>
            二分法的
            </summary>
            <param name="orderType"></param>
        </member>
        <member name="M:Buffalo.Kernel.OrderSortList`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            添加一个项
            </summary>
            <param name="kp"></param>
        </member>
        <member name="M:Buffalo.Kernel.OrderSortList`2.Add(`0,`1)">
            <summary>
            添加一个项
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Buffalo.Kernel.OrderSortList`2.Set(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            设置一个项
            </summary>
            <param name="kp"></param>
        </member>
        <member name="M:Buffalo.Kernel.OrderSortList`2.Set(`0,`1)">
            <summary>
            设置一个项
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Buffalo.Kernel.OrderSortList`2.TryGetByKey(`0,`1@)">
            <summary>
            通过键获取值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.OrderSortList`2.BinarySearch(`0,System.Int32@)">
            <summary>
            查找
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Kernel.OrderSortList`2.OrderType">
            <summary>
            排序方式
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.OrderSortList`2.Item(System.Int32)">
            <summary>
            获取索引的值
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="F:Buffalo.Kernel.SortListOrderType.ASC">
            <summary>
            顺序
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.SortListOrderType.DESC">
            <summary>
            倒序
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.FastReflection.CreateInstanceHandler">
            @原作者:JeffreyZhao
            @创建时间:2009-02-01
            @链接:http://www.cnblogs.com/JeffreyZhao/archive/2009/02/01/Fast-Reflection-Library.html
            @说明:.NET IL快速反射类
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastInvoke.InvokeMethod(Buffalo.Kernel.FastReflection.FastInvokeHandler,System.Object,System.Object[])">
            <summary>
            委托获取实体类对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastInvoke.GetInstanceCreator(System.Type)">
            <summary>
            生成实体类
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastInvoke.GetPropertyAttribute(System.Reflection.FieldInfo,System.Type)">
            <summary>
            获取某个属性的标识
            </summary>
            <param name="finf">属性的信息</param>
            <param name="attributeType">属性类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastInvoke.GetPropertyAttribute(System.Reflection.PropertyInfo,System.Type)">
            <summary>
            获取某个属性的标识
            </summary>
            <param name="pinf">属性的信息</param>
            <param name="attributeType">属性类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastInvoke.GetPropertyAttribute``1(System.Reflection.PropertyInfo)">
            <summary>
            获取某个属性的标识
            </summary>
            <param name="pinf">属性的信息</param>
            <param name="attributeType">属性类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastInvoke.GetClassAttribute(System.Type,System.Type)">
            <summary>
            获取指定类的标识
            </summary>
            <param name="classType">指定类的类型</param>
            <param name="attributeType">标识类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastInvoke.GetClassAttribute``1(System.Type)">
            <summary>
            获取指定类的标识
            </summary>
            <param name="classType">指定类的类型</param>
            <returns></returns>
        </member>
        <member name="T:Buffalo.Kernel.FastReflection.ClassInfos.ProxyAssembly">
            <summary>
            远程程序集
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ProxyAssembly.#ctor(System.String)">
            <summary>
            加载文件
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ProxyAssembly.#ctor(System.Byte[])">
            <summary>
            加载文件内容
            </summary>
            <param name="fileContent"></param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ProxyAssembly.GetObjectInstance(System.String,System.Object[])">
            <summary>
            获取类型的实体
            </summary>
            <param name="typeName">类型名</param>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.ClassInfos.ProxyAssembly.Assembly">
            <summary>
            关联的程序集信息
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.ExcelFormat">
            <summary>
            Excel格式
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.ExcelFormat.Excel2003">
            <summary>
            Excel2003的格式(xls)
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.ExcelFormat.Excel2010">
            <summary>
            Excel2007、Excel2010格式(xlsx)
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.GetConnectString(System.String,Buffalo.Kernel.ExcelFormat)">
            <summary>
            获取连接字符串
            </summary>
            <param name="path"></param>
            <param name="fromat"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.LoadXLS(System.String)">
            <summary>
            读取Excel到DataSet
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.LoadXLS(System.String,Buffalo.Kernel.ExcelFormat)">
            <summary>
            读取Excel到DataSet
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.ToExcel(System.Data.DataSet,System.String)">
            <summary>
            把DataTable保存到Excel文件
            </summary>
            <param name="dt">数据源</param>
            <param name="excelPath">Excel文件位置</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.ToExcel(System.Data.DataSet,System.String,Buffalo.Kernel.ExcelFormat)">
            <summary>
            把DataTable保存到Excel文件
            </summary>
            <param name="dt">数据源</param>
            <param name="excelPath">Excel文件位置</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.ReadCSVFromDT(System.String)">
            <summary>
            读取CSV
            </summary>
            <param name="stm"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.ReadCSVFromDT(System.String,System.Text.Encoding)">
            <summary>
            读取CSV
            </summary>
            <param name="stm"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.ReadCSVFromDT(System.IO.Stream,System.Text.Encoding)">
            <summary>
            读取CSV
            </summary>
            <param name="stm"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.WriteCSVToDT(System.String,System.Data.DataTable)">
            <summary>
            把DataTable导出成CSV文件
            </summary>
            <param name="stm"></param>
            <param name="dt"></param>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.WriteCSVToDT(System.String,System.Data.DataTable,System.Text.Encoding)">
            <summary>
            把DataTable导出成CSV文件
            </summary>
            <param name="stm"></param>
            <param name="dt"></param>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.WriteCSVToDT(System.IO.Stream,System.Data.DataTable,System.Text.Encoding)">
            <summary>
            把DataTable导出成CSV文件
            </summary>
            <param name="stm"></param>
            <param name="dt"></param>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.ReadCSV(System.String)">
            <summary>
            读取CSV
            </summary>
            <param name="stm">文件流</param>
            <param name="encoding">编码</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.WriteCSV(System.String,System.Collections.Generic.List{System.String[]})">
            <summary>
            写入CSV
            </summary>
            <param name="path">文件路径</param>
            <param name="ls">数据</param>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.WriteCSV(System.IO.Stream,System.Collections.Generic.List{System.String[]},System.Text.Encoding)">
            <summary>
            写入CSV
            </summary>
            <param name="stm">文件流</param>
            <param name="ls">数据</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:Buffalo.Kernel.ExcelUnit.ReadCSV(System.IO.Stream,System.Text.Encoding)">
            <summary>
            读取CSV
            </summary>
            <param name="stm">文件流</param>
            <param name="encoding">编码</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastValueGetSet.GetPropertyInfoHandle(System.String,System.Type)">
            <summary>
            获取属性的信息
            </summary>
            <param name="proName">属性名</param>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastValueGetSet.GetPropertyInfoHandleWithOutCache(System.String,System.Type)">
            <summary>
            获取属性的信息(不使用缓存)
            </summary>
            <param name="proName">属性名</param>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastValueGetSet.GetGetMethodInfo(System.String,System.Type)">
            <summary>
            获取获取值的方法接口
            </summary>
            <param name="proName">属性名</param>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastValueGetSet.GetSetMethodInfo(System.String,System.Type)">
            <summary>
            获取设置值的方法接口
            </summary>
            <param name="proName">属性名</param>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastValueGetSet.GetCustomerMethodInfo(System.Type,System.String,System.Type[])">
            <summary>
            获取该类型的指定方法的委托
            </summary>
            <param name="objectType">所属类的类型</param>
            <param name="methodName">方法名</param>
            <param name="parametersType">参数列表</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastValueGetSet.GetCustomerMethodInfo(System.Reflection.MethodInfo)">
            <summary>
            获取该类型的指定方法的委托
            </summary>
            <param name="methodInfo">函数信息</param>
            <param name="parametersType">参数列表</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastValueGetSet.SetValue(System.Object,System.Object,System.String,System.Type)">
            <summary>
            对对象赋值
            </summary>
            <param name="args">对象</param>
            <param name="value">值</param>
            <param name="propertyName">属性名</param>
            <param name="objType">对象类型</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastValueGetSet.GetValue(System.Object,System.String,System.Type)">
            <summary>
            获取对象赋值
            </summary>
            <param name="args">对象</param>
            <param name="value">值</param>
            <param name="propertyName">属性名</param>
            <param name="objType">对象类型</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastValueGetSet.CreateObject(System.Type)">
            <summary>
            生成实体类
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastValueGetSet.GetCreateInstanceHandler(System.Type)">
            <summary>
            根据类型查找指定的创建对象的代理
            </summary>
            <param name="type">类型</param> 
            <returns></returns> 
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastValueGetSet.GetCreateInstanceHandlerWithOutCache(System.Type)">
            <summary>
            根据类型查找指定的创建对象的代理
            </summary>
            <param name="type">类型</param> 
            <returns></returns> 
        </member>
        <member name="T:Buffalo.Kernel.FastReflection.ClassInfos.ClassInfoManager">
            <summary>
            实体属性管理
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ClassInfoManager.GetClassHandle(System.Type)">
            <summary>
            获取实体类里边得属性信息
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ClassInfoManager.InitClassPropertyInfos(System.Type)">
            <summary>
            初始化类型的属性信息
            </summary>
            <param name="type">类型</param>
            <returns>如果已经初始化过侧返回false</returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ClassInfoManager.ObjectCopy(System.Object,System.Object)">
            <summary>
            对象属性拷贝(同名字段)
            </summary>
            <param name="source">源对象</param>
            <param name="target">目标对象</param>
            <returns></returns>
        </member>
        <member name="T:Buffalo.Kernel.Media.AVIWriter">
            <summary>
            AVIWriter 的摘要说明，chenpeng,Email:ceponline@yahoo.com.cn。
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.Media.AVIWriter.CreateStream">
            <summary>
            创建流文件
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.Media.AVIWriter.SetOptions">
            <summary>
            设置参数
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Media.AVIWriter.CompressedOptionData">
            <summary>
            压缩选项数据
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.HttpServerModel.RequestProcessingHandle">
            <summary>
            请求处理委托
            </summary>
            <param name="request"></param>
            <param name="response"></param>
        </member>
        <member name="T:Buffalo.Kernel.HttpServerModel.ServerModel">
            <summary>
            模拟Web服务器模块
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.HttpServerModel.ServerModel.#ctor(System.String,System.Int32)">
            <summary>
            初始化服务模块
            </summary>
            <param name="ip">IP</param>
            <param name="lisPort">端口</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:Buffalo.Kernel.HttpServerModel.ServerModel.StarServer">
            <summary>
            开始监听
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.HttpServerModel.ServerModel.ModelListen">
            <summary>
            监听
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.HttpServerModel.ServerModel.GetEncoding(Buffalo.Kernel.HttpServerModel.RequestInfo)">
            <summary>
            获取请求的编码
            </summary>
            <param name="resInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.HttpServerModel.ServerModel.CreateHeader(System.String,System.String,System.Int32,System.String,System.Text.Encoding)">
            <summary>
            发送头
            </summary>
            <param name="sHttpVersion"></param>
            <param name="sMIMEHeader"></param>
            <param name="iTotBytes"></param>
            <param name="sStatusCode"></param>
        </member>
        <member name="M:Buffalo.Kernel.HttpServerModel.ServerModel.StopServer">
            <summary>
            关闭服务
            </summary>
        </member>
        <member name="E:Buffalo.Kernel.HttpServerModel.ServerModel.OnRequestProcessing">
            <summary>
            请求处理呃事件
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.ServerModel.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.ServerModel.IP">
            <summary>
            IP
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.FastReflection.PropertyInfoHandle">
            <summary>
            创建属性的信息类
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.PropertyInfoHandle.#ctor(System.Type,Buffalo.Kernel.FastReflection.FastInvokeHandler,Buffalo.Kernel.FastReflection.FastInvokeHandler,System.Type,System.String)">
            <summary>
            创建属性的信息类
            </summary>
            <param name="getHandle">get委托</param>
            <param name="setHandle">set委托</param>
            <param name="propertyType">属性数据类型</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.PropertyInfoHandle.SetValue(System.Object,System.Object)">
            <summary>
            给对象设置值
            </summary>
            <param name="args">对象</param>
            <param name="value">值</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.PropertyInfoHandle.GetValue(System.Object)">
            <summary>
            获取对象值
            </summary>
            <param name="args">对象</param>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.PropertyInfoHandle.Belong">
            <summary>
            属性所属的类
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.PropertyInfoHandle.PropertyType">
            <summary>
            获取属性的类型
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.PropertyInfoHandle.PropertyName">
            <summary>
            获取属性的名字
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.PropertyInfoHandle.HasGetHandle">
            <summary>
            是否有Get方法
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.PropertyInfoHandle.HasSetHandle">
            <summary>
            是否有Set方法
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.DllInvoke">
            <summary>
            DllInvoke 的摘要说明
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.Defaults.DefaultType.GetCSharpVariableType(System.Data.DbType)">
            <summary>
            获取C#类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Defaults.DefaultType.IsDefaultValue(System.Object)">
            <summary>
            判断是否默认值
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Defaults.DefaultType.GetDefaultValue(System.Type)">
            <summary>
            获取该类型的默认值
            </summary>
            <param name="objType"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Defaults.DefaultType.IsInherit(System.Type,System.Type)">
            <summary>
            判断是否该类型的子类
            </summary>
            <param name="type">当前类</param>
            <param name="baseType">基类</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Defaults.DefaultType.EqualType(System.Type,System.Type)">
            <summary>
            判断变量类型是否此类型
            </summary>
            <param name="value"></param>
            <param name="objType"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Defaults.DefaultType.GetRealValueType(System.Type)">
            <summary>
            获取泛型类里边的类型
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Defaults.DefaultType.GetGenericType(System.Type,System.Boolean)">
            <summary>
            获取泛型里边的类型
            </summary>
            <param name="type"></param>
            <param name="isherit"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Defaults.DefaultType.IsImplement(System.Type,System.Type)">
            <summary>
            判断是否实现了该接口
            </summary>
            <param name="type">当前类</param>
            <param name="interfaceType">接口类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Defaults.DefaultType.ToDbType(System.Type)">
            <summary>
            把C#类型转换成SQL类型
            </summary>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CSVReader.ReaderRow">
            <summary>
            读取行
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CSVReader.ReadValue">
            <summary>
            读取值
            </summary>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Kernel.CSVReader.IsEnd">
            <summary>
            是否已经读完
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.SmartSellMap.SellCombination`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            销售组合
            </summary>
            <param name="sender">购买者</param>
            <param name="lstItems">组合集合</param>
        </member>
        <member name="M:Buffalo.Kernel.SmartSellMap.SellCombination`1.SortItem">
            <summary>
            按消耗倒序排列
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.SmartSellMap.SellCombination`1.DoCombination(Buffalo.Kernel.SmartSellMap.ICombinationState)">
            <summary>
            开始组合
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.SmartSellMap.SellCombination`1.ToCombination">
            <summary>
            组合
            </summary>
            <param name="curItem">当前项</param>
            <param name="itemIndex">项索引</param>
        </member>
        <member name="T:Buffalo.Kernel.FastReflection.AssemblyTypeLoader">
            <summary>
            程序集的类型加载器
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.AssemblyTypeLoader.#ctor(System.String[])">
            <summary>
            程序集的类型加载器
            </summary>
            <param name="assNames">指定的程序集</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.AssemblyTypeLoader.GetBaseRoot">
            <summary>
            基目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.AssemblyTypeLoader.LoadAllAssembly(System.String[])">
            <summary>
            获取本项目所有程序集
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.AssemblyTypeLoader.LoadType(System.String)">
            <summary>
            加载类型
            </summary>
            <param name="typeName">类型名</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.AssemblyTypeLoader.LoadType(System.String,System.String)">
            <summary>
            加载类型
            </summary>
            <param name="typeName">类型名称</param>
            <param name="assemblyName">程序集名</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.AssemblyTypeLoader.GetTypes">
            <summary>
            获取加载的程序集中所有的类型
            </summary>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.AssemblyTypeLoader.Default">
            <summary>
            默认全部程序集的类型加载器
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.Replacer.ReplaceCollection.Add(System.String,System.String)">
            <summary>
            添加一个新的替换项
            </summary>
            <param name="oldString">旧字符串</param>
            <param name="newString">新字符串</param>
        </member>
        <member name="T:Buffalo.Kernel.HttpServerModel.ResponseInfo">
            <summary>
            回传信息
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.HttpServerModel.ResponseInfo.Write(System.Byte[])">
            <summary>
            写入数据
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:Buffalo.Kernel.HttpServerModel.ResponseInfo.Write(System.String)">
            <summary>
            写入数据
            </summary>
            <param name="content"></param>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.ResponseInfo.MimeType">
            <summary>
            传送类型
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.ResponseInfo.ResponseContent">
            <summary>
            返回的内容
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultIntValue">
            <summary>
            整型默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultBooleanValue">
            <summary>
            布尔型默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultDoubleValue">
            <summary>
            双精度默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultFloatValue">
            <summary>
            浮点型默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultDateTimeValue">
            <summary>
            时间默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultDecimalValue">
            <summary>
            Decimal默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultByteValue">
            <summary>
            字节默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultSbyteValue">
            <summary>
            小字节默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultShortValue">
            <summary>
            短整型默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultLongValue">
            <summary>
            长整型默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultUintValue">
            <summary>
            无符号整型默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultUshortValue">
            <summary>
            无符号短整型默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultUlongValue">
            <summary>
            无符号长整型默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultGuidValue">
            <summary>
            Guid类型
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultInt">
            <summary>
            整型默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultDouble">
            <summary>
            双精度默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultFloat">
            <summary>
            浮点型默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultDecimal">
            <summary>
            Decimal默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultSbyte">
            <summary>
            小字节默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultShort">
            <summary>
            短整型默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultLong">
            <summary>
            长整型默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultGuid">
            <summary>
            Guid默认值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Defaults.DefaultValue.DefaultDateTime">
            <summary>
            时间默认值
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.Defaults.DefaultValue.ValueToString(System.Object,System.String)">
            <summary>
            把值按照指定格式转换成字符串
            </summary>
            <param name="value">值</param>
            <param name="formatString">格式字符串</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Defaults.DefaultValue.Compare(System.Object,System.Object)">
            <summary>
            对两个object值进行比较(-1为val1&lt;val2,0为val1=val2,1为val1&gt;val2)
            </summary>
            <param name="val1">值1</param>
            <param name="val2">值2</param>
            <returns>-1为val1&lt;val2,0为val1=val2,1为val1&gt;val2</returns>
        </member>
        <member name="T:Buffalo.Kernel.CommonMethods">
            <summary>
            常用的方法类
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.GetBaseRoot(System.String)">
            <summary>
            获取基路径
            </summary>
            <param name="configRoot"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.GetBaseRoot">
            <summary>
            获取应用程序的基目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.Clone(System.Object)">
            <summary>
            克隆
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.CopyTo(System.Object,System.Object)">
            <summary>
            拷贝数据
            </summary>
            <param name="source">源类</param>
            <param name="target">目标类</param>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.IsNull(System.Object)">
            <summary>
            判断是否为空
            </summary>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.GuidToString(System.Guid)">
            <summary>
            GUID转成字符串
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.StringToGuid(System.String)">
            <summary>
            字符串转回GUID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.DataSetToXML(System.Data.DataSet,System.Data.XmlWriteMode)">
            <summary>
            把DataSet打成XML字符串
            </summary>
            <param name="ds">要处理的DataSet</param>
            <param name="mode">指定如何从 System.Data.DataSet 写入 XML 数据和关系架构</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.DataSetToXML(System.Data.DataSet)">
            <summary>
            把DataSet打成XML字符串
            </summary>
            <param name="ds">要处理的DataSet</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.XMLToDataSet(System.String,System.Data.XmlReadMode)">
            <summary>
            XML字符串转成DataSet
            </summary>
            <param name="xml">xml字符串</param>
            <param name="mode">指定如何将 XML 数据和关系架构读入 System.Data.DataSet</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.XMLToDataSet(System.String)">
            <summary>
            XML字符串转成DataSet
            </summary>
            <param name="xml">xml字符串</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.RawDeserialize(System.Byte[],System.Type)">
            <summary>
            反序列化结构体
            </summary>
            <param name="rawdatas"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.RawDeserialize``1(System.Byte[])">
            <summary>
            反序列化结构体
            </summary>
            <param name="rawdatas"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.RawDeserialize(System.IO.Stream,System.Type)">
            <summary>
            从流中读出元素
            </summary>
            <param name="stm"></param>
            <param name="objType"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.RawDeserialize``1(System.IO.Stream)">
            <summary>
            从流中读出元素
            </summary>
            <param name="stm">流</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.RawSerialize(System.Object)">
            <summary>
            对象序列化成字节数组
            </summary>
            <param name="obj">对象</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.GetLocalIP">
            <summary>
            获取本机IP
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.EntityProChangeType(System.Object,System.Type)">
            <summary>
            实体类型转换
            </summary>
            <param name="sValue">源值</param>
            <param name="targetType">目标类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.ChangeType(System.Object,System.Type)">
            <summary>
            转换类型
            </summary>
            <param name="sValue">值</param>
            <param name="targetType">目标类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.ReplaceString(System.String,System.Collections.Generic.IEnumerable{Buffalo.Kernel.Replacer.ReplaceItem})">
            <summary>
            按照条件替换字符串
            </summary>
            <param name="source">源字符串</param>
            <param name="conditions">替换条件集合</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.LoadStreamData(System.IO.Stream)">
            <summary>
            读取流的内容
            </summary>
            <param name="stm">流</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.LoadStreamData2(System.IO.Stream)">
            <summary>
            读取流的内容
            </summary>
            <param name="stm">流</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.CopyStreamData(System.IO.Stream,System.IO.Stream)">
            <summary>
            流内容复制
            </summary>
            <param name="stmSource">源</param>
            <param name="stmTarget">目标</param>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.GetAllNumber(System.String)">
            <summary>
            获取字符串里边的所有数字
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.IsStringEmpty(System.String)">
            <summary>
            判断字符串是否为空
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.BytesToHexString(System.Byte[])">
            <summary>
            把字节数组转成十六进制字符串
            </summary>
            <param name="bye">字节数组</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.ByteToHexString(System.Byte)">
            <summary>
            把字节转成十六进制字符串
            </summary>
            <param name="bye">字节</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.ToByteString(System.String)">
            <summary>
            把文字转成十六进制字符码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.HexStringToBytes(System.String)">
            <summary>
            把十六进制字符串转成字节数组
            </summary>
            <param name="str">十六进制字符串</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.FormatString(System.Object)">
            <summary>
            格式化字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.FormatLongString(System.Object,System.Int32)">
            <summary>
            格式化字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.GetCode(System.Int32)">
            <summary>
             随机生成字符串
            </summary>
            <param name="length">生成多少位随机字符串</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.FormatDateTimeString(System.DateTime)">
            <summary>
            格式化输出的日期
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.IsIntNumber(System.String)">
            <summary>
            判断该字符串是否整型数字
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.ListToDictionary``2(System.Collections.Generic.IEnumerable{``1},System.String)">
            <summary>
            把集合转换成字典类
            </summary>
            <typeparam name="TKey">键类型</typeparam>
            <typeparam name="TValue">值类型 </typeparam>
            <param name="collection">集合类</param>
            <param name="keyProperty">键名</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.IsNumber(System.String)">
            <summary>
            判断该字符串是否整型数字
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.GetFileName(System.String,System.String,System.String)">
            <summary>
            创建文件名
            </summary>
            <param name="path">路径</param>
            <param name="fileNamepart">文件名</param>
            <param name="extendName">扩展名</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.CurrentDataString">
            <summary>
            按时间生成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.StringToKey(System.String,System.Byte)">
            <summary>
            把字符串变成字节数组，然后数组每个元素减去指定的值
            </summary>
            <param name="str">字符串</param>
            <param name="bye">要减去的值</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.KeyToString(System.String,System.Byte)">
            <summary>
            把字节数组变回字符串，数组每个元素加上指定的值
            </summary>
            <param name="str">字符串</param>
            <param name="bye">要加上的值</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.CommonMethods.GetFilePath(System.String)">
            <summary>
            获取文件路径所在的文件夹
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Kernel.CommonMethods.IsWebContext">
            <summary>
            检测是否Web程序
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.CommonMethods.Regulars">
            <summary>
            常用的正则表达式
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.CommonMethods.Regulars.PhoneRegular">
            <summary>
            固定电话
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.CommonMethods.Regulars.AllPhoneRegular">
            <summary>
            所有电话
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.CommonMethods.Regulars.Mobile">
            <summary>
            移动电话
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.ArrayTypeConvert">
            <summary>
            快速类型转换(修改类型标志，非拷贝)
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.ArrayTypeConvert.IntArrayToByteArray(System.Int32[])">
            <summary>
            整型数组转换成字节数组
            </summary>
            <param name="arr"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ArrayTypeConvert.ByteArrayToIntArray(System.Byte[])">
            <summary>
            字节数组转换成整型数组
            </summary>
            <param name="arr"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ArrayTypeConvert.ByteArrayToCharArray(System.Byte[])">
            <summary>
            字节数组转换成
            </summary>
            <param name="arr"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ArrayTypeConvert.CharArrayToByteArray(System.Char[])">
            <summary>
            字符数组转换成整型数组
            </summary>
            <param name="arr"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ArrayTypeConvert.ChangeArrayTypeHandle(System.Type,System.Byte*,System.Int32)">
            <summary>
            转换数组类型
            </summary>
            <param name="objType">新类型</param>
            <param name="pbarr">原类型指针</param>
            <param name="newLength">新数组长度</param>
        </member>
        <member name="P:Buffalo.Kernel.UpdateModelUnit.ContorlDefaultPropertyInfo.PropertyType">
            <summary>
            属性的数值类型
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.UpdateModelUnit.ContorlDefaultPropertyInfo.PropertyHandle">
            <summary>
            属性的Get/Set委托
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.UpdateModelUnit.ContorlDefaultPropertyInfo.DefaultValue">
            <summary>
            属性的默认值
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.Replacer.MyReplacer.SplitItems(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            替换集合的字符
            </summary>
            <param name="itemCollection">要替换的集合</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Replacer.MyReplacer.Replace(System.String,System.Collections.Generic.IEnumerable{Buffalo.Kernel.Replacer.ReplaceItem})">
            <summary>
            替换集合的字符
            </summary>
            <param name="itemCollection">要替换的集合</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Replacer.MyReplacer.DoReplace(System.String,System.Collections.Generic.IEnumerable{Buffalo.Kernel.Replacer.ReplaceItem},System.Int32@)">
            <summary>
            判断是否有替换的关键字
            </summary>
            <param name="source">源字符串</param>
            <param name="itemCollection"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Replacer.MyReplacer.StringEquals(System.String,System.Int32,System.String)">
            <summary>
            判断源字符串从指定位置开始是否有匹配的keyword
            </summary>
            <param name="source">源字符串</param>
            <param name="index">指定位置</param>
            <param name="keyWord">关键字</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Replacer.DicReplace.Replace(System.String,Buffalo.Kernel.Replacer.ReplaceItemCollection)">
            <summary>
            替换集合的字符
            </summary>
            <param name="itemCollection">要替换的集合</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Replacer.DicReplace.GetString(System.String,System.Int32@,Buffalo.Kernel.Replacer.ReplaceItemCollection)">
            <summary>
            判断源字符串从指定位置开始是否有匹配的keyword
            </summary>
            <param name="source">源字符串</param>
            <param name="index">指定位置</param>
            <param name="keyWord">关键字</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetListener.#ctor(System.Int32,System.ComponentModel.ISynchronizeInvoke)">
            <summary>
            网络监听器
            </summary>
            <param name="port">监听端口</param>
            <param name="synInvoker">需要线程同步的宿主(如：当前窗体)</param>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetListener.#ctor(System.Int32)">
            <summary>
            网络监听器
            </summary>
            <param name="port">监听端口</param>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetListener.#ctor">
            <summary>
             网络监听器
            </summary>
            <param name="port">监听端口</param>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetListener.#ctor(System.Net.EndPoint,System.ComponentModel.ISynchronizeInvoke)">
            <summary>
            网络监听器
            </summary>
            <param name="localEnport">本地节点</param>
            <param name="synInvoker">需要线程同步的宿主(如：当前窗体)</param>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetListener.#ctor(System.String,System.Int32,System.ComponentModel.ISynchronizeInvoke)">
            <summary>
             网络监听器
            </summary>
            <param name="ipAddress">IP地址</param>
            <param name="port">监听端口</param>
            <param name="synInvoker">需要线程同步的宿主(如：当前窗体)</param>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetListener.StarListen">
            <summary>
            开始监听
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetListener.StarListen(System.Net.Sockets.ProtocolType)">
            <summary>
            开始监听
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetListener.StopListener">
            <summary>
            关闭监听
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetListener.MainListener">
            <summary>
            主监听线程
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetListener.DoAccept(System.Object)">
            <summary>
            当有信息进入时候
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Lock">
            <summary>
            会自动释放的锁，可设置等待超时
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Lock.defaultMillisecondsTimeout">
            <summary>
            默认超时设置
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.Lock.#ctor(System.Object)">
            <summary>
            构造 
            </summary>
            <param name="obj">想要锁住的对象</param>
        </member>
        <member name="M:Buffalo.Kernel.Lock.#ctor(System.Object,System.Int32)">
            <summary>
            构造
            </summary>
            <param name="obj">想要锁住的对象</param>
            <param name="millisecondsTimeout">超时设置</param>
        </member>
        <member name="M:Buffalo.Kernel.Lock.#ctor(System.Object,System.Int32,System.Boolean)">
            <summary>
            构造
            </summary>
            <param name="obj">想要锁住的对象</param>
            <param name="millisecondsTimeout">超时设置</param>
            <param name="throwTimeoutException">是否抛出超时异常</param>
        </member>
        <member name="M:Buffalo.Kernel.Lock.Dispose">
            <summary>
            销毁，并释放锁
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Lock.IsTimeout">
            <summary>
            获取在获取锁时是否发生等待超时
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.ReuqestParamCollection.Item(System.String)">
            <summary>
            值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Buffalo.Kernel.Win32.CREATESTRUCT">
            <summary>
            Structures to interoperate with the Windows 32 API  
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.Win32.POINT.#ctor(System.Int32)">
            <summary>
            Point creation from lParam `s data
            </summary>
            <param name="lParam"></param>
        </member>
        <member name="M:Buffalo.Kernel.Win32.CURSORINFO.DrawMouseIcon(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            绘制鼠标
            </summary>
            <param name="grp">图像</param>
            <param name="x">位置x</param>
            <param name="y">位置y</param>
        </member>
        <member name="M:Buffalo.Kernel.Win32.CURSORINFO.DrawMouseIcon(System.Drawing.Graphics)">
            <summary>
            绘制鼠标
            </summary>
            <param name="grp">图像</param>
        </member>
        <member name="T:Buffalo.Kernel.Win32.KBDLLHOOKSTRUCT">
            <summary>
            键盘钩子信息结构体
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Win32.KBDLLHOOKSTRUCT.vkCode">
            <summary>Especifica el codigo de tecla virtual, el codigo esta entre 1 y 254.</summary>
        </member>
        <member name="F:Buffalo.Kernel.Win32.KBDLLHOOKSTRUCT.scanCode">
            <summary>Especifica el escaneo de hardware del codigo de la tecla</summary>
        </member>
        <member name="F:Buffalo.Kernel.Win32.KBDLLHOOKSTRUCT.flags">
            <summary>especifica flags extendidos, mirar la estrucutra 'KBDLLHOOKSTRUCT' para mas info</summary>
        </member>
        <member name="F:Buffalo.Kernel.Win32.KBDLLHOOKSTRUCT.time">
            <summary>especifica el time stamp para este mensaje.</summary>
        </member>
        <member name="F:Buffalo.Kernel.Win32.KBDLLHOOKSTRUCT.dwExtraInfo">
            <summary>Especifica informacion extra para el mensaje</summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.TOKEN_PRIVILEGES">
            <summary>
            进程令牌
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.SystemName">
            <summary>
            系统名名
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.BROWSEINFO">
            <summary>
            Contains parameters for the SHBrowseForFolder function and
            receives information about the folder selected 
            by the user.
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.PasswordHash.ToMD5String(System.String)">
            <summary>
            对字符串进行MD5加密
            </summary>
            <param name="str">要加密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.PasswordHash.ToMD5String(System.Byte[])">
            <summary>
            对字符串进行MD5加密
            </summary>
            <param name="str">要加密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.PasswordHash.ToSHA1String(System.String)">
            <summary>
            对字符串进行MD5加密
            </summary>
            <param name="str">要加密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.PasswordHash.ToSHA1String(System.Byte[])">
            <summary>
            对字符串进行MD5加密
            </summary>
            <param name="str">要加密的字符串</param>
            <returns></returns>
        </member>
        <member name="T:Buffalo.Kernel.MassManager">
            <summary>
            常量管理器
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.MassManager.GetMassInfos(System.Type)">
            <summary>
            根据类型获取常量集合
            </summary>
            <param name="objType"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.MassManager.GetInfoByName(System.Type,System.String)">
            <summary>
            通过字段名获取其常量信息
            </summary>
            <param name="objType"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.MassManager.GetInfoByValue(System.Type,System.Object)">
            <summary>
            通过值获取其常量信息
            </summary>
            <param name="objType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.MassManager.GetInfos(System.Type)">
            <summary>
            获取此类的常量信息
            </summary>
            <param name="objType"></param>
            <returns></returns>
        </member>
        <member name="T:Buffalo.Kernel.MassBase`1">
            <summary>
            常量类的基类
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.MassBase`1.GetInfos">
            <summary>
            获取本常量类里边所有属性的信息
            </summary>
            <param name="enumType">枚举类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.MassBase`1.GetDescription(System.Object)">
            <summary>
            获取常量值值的注释
            </summary>
            <param name="objEnum"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.MassBase`1.GetInfo(System.Object)">
            <summary>
            获取常量值对应的信息
            </summary>
            <param name="value">常量值</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.MassBase`1.GetInfoByName(System.String)">
            <summary>
            根据常量类的字段名来获取其信息
            </summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.MailSender.SendMail(System.String,System.String,System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="mailTo">发送到</param>
            <param name="title">标题</param>
            <param name="contact">正文</param>
        </member>
        <member name="P:Buffalo.Kernel.MailSender.MailSource">
            <summary>
            发送源邮箱
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.MailSender.MailUser">
            <summary>
            发送源邮箱登录名
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.MailSender.MailPass">
            <summary>
            发送源邮箱登录名
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.MailSender.MailSmtp">
            <summary>
            发送源邮箱登录名
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.HttpServerModel.RequestInfo">
            <summary>
            请求信息
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.HttpServerModel.RequestInfo.#ctor(System.String)">
            <summary>
            请求信息
            </summary>
            <param name="requestContent"></param>
        </member>
        <member name="M:Buffalo.Kernel.HttpServerModel.RequestInfo.FillUrlInfo(System.String)">
            <summary>
            填充Url信息
            </summary>
            <param name="url"></param>
        </member>
        <member name="F:Buffalo.Kernel.HttpServerModel.RequestInfo._requestType">
            <summary>
            请求类型
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.HttpServerModel.RequestInfo._path">
            <summary>
            请求目录
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.HttpServerModel.RequestInfo._requestParam">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.HttpServerModel.RequestInfo._httpVersion">
            <summary>
            HTTP版本号
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.HttpServerModel.RequestInfo._host">
            <summary>
            主机
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.HttpServerModel.RequestInfo._connection">
            <summary>
            连接状态
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.HttpServerModel.RequestInfo._cacheControl">
            <summary>
            缓存控制
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.HttpServerModel.RequestInfo._userAgent">
            <summary>
            UserAgent
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.HttpServerModel.RequestInfo._accept">
            <summary>
            回应类型
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.HttpServerModel.RequestInfo._acceptEncoding">
            <summary>
            回应编码
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.HttpServerModel.RequestInfo._acceptLanguage">
            <summary>
            语言
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.HttpServerModel.RequestInfo._acceptCharset">
            <summary>
            字符集
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.RequestInfo.RequestType">
            <summary>
            请求类型
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.RequestInfo.Path">
            <summary>
            请求目录
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.RequestInfo.RequestParam">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.RequestInfo.HttpVersion">
            <summary>
            HTTP版本号
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.RequestInfo.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.RequestInfo.Connection">
            <summary>
            连接状态
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.RequestInfo.CacheControl">
            <summary>
            缓存控制
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.RequestInfo.UserAgent">
            <summary>
            UserAgent
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.RequestInfo.Accept">
            <summary>
            回应类型
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.RequestInfo.AcceptEncoding">
            <summary>
            回应编码
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.RequestInfo.AcceptLanguage">
            <summary>
            语言
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.HttpServerModel.RequestInfo.AcceptCharset">
            <summary>
            字符集
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.FastReflection.ClassInfos.ClassInfoHandle">
            <summary>
            类的信息
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ClassInfoHandle.#ctor(System.Type,Buffalo.Kernel.FastReflection.CreateInstanceHandler,System.Collections.Generic.Dictionary{System.String,Buffalo.Kernel.FastReflection.PropertyInfoHandle},System.Collections.Generic.Dictionary{System.String,Buffalo.Kernel.FastReflection.FieldInfoHandle})">
            <summary>
            类的信息
            </summary>
            <param name="classType">类类型</param>
            <param name="createInstanceHandler">实例化类的句柄</param>
            <param name="propertyInfoHandles">属性集合</param>
            <param name="fieldInfoHandles">字段集合</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ClassInfoHandle.CreateInstance">
            <summary>
            返回此类型的实例
            </summary>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.ClassInfos.ClassInfoHandle.ClassType">
            <summary>
            本类的类型
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.ClassInfos.ClassInfoHandle.PropertyInfo">
            <summary>
            获取属性的信息
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.ClassInfos.ClassInfoHandle.FieldInfo">
            <summary>
            获取字段的信息
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ClassPropertyInfoCollection.#ctor(System.Collections.Generic.Dictionary{System.String,Buffalo.Kernel.FastReflection.PropertyInfoHandle})">
            <summary>
            属性信息集合
            </summary>
            <param name="propertyInfoHandles">属性信息的哈希表</param>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.ClassInfos.ClassPropertyInfoCollection.Item(System.String)">
            <summary>
            根据属性名获取属性信息
            </summary>
            <param name="propertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.ClassInfos.ClassPropertyInfoCollection.Count">
            <summary>
            当前属性的数量
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.FastReflection.ClassInfos.ClassFieldEnumerator">
            <summary>
            属性的枚举类
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.EnumInfo.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.EnumInfo.FieldName">
            <summary>
            常量名
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.EnumInfo.Description">
            <summary>
            注释[Description("内容")]的内容
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.SystemInfo">
            <summary>
            系统信息
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.Win32.SystemInfo.Is64System">
            <summary>
            是否64位系统
            </summary>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Kernel.Win32.SystemInfo.IsWindows2000OrNewer">
            <summary>
            Gets a value indicating if the operating system is a Windows 2000 or a newer one.
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Win32.SystemInfo.IsWindowsXpOrNewer">
            <summary>
            Gets a value indicating if the operating system is a Windows XP or a newer one.
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Win32.SystemInfo.IsWindowsVistaOrNewer">
            <summary>
            Gets a value indicating if the operating system is a Windows Vista or a newer one.
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.PeekMessageFlags">
            <summary>
            Window API enumerations
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.Msg">
            <summary>
            Windows消息类型
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.ProcessAccess">
            <summary>
            进程状态
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.EWX">
            <summary>
            退出Windows状态
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.TOKEN">
            <summary>
            退出Windows状态
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.KeyModifiers">
            <summary>
            组合键枚举
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.MessageSCType">
            <summary>
            Windows消息SC类型
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.SPIAction">
            <summary>
            SystemParametersInfo的动作
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.DebugState">
            <summary>
            调试器状态
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Win32.DebugState.DBG_CONTINUE">
            <summary>
             //返回继续调试状态值
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Win32.DebugState.INFINITE">
            <summary>
            等待事件
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.ContextFlags64">
            <summary>
            线程信息标志
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.WMode">
            <summary>
            异常类型
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.ServicesAccessType">
            <summary>
            AccessType
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.ServicesStartType">
            <summary>
            Start Type
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Win32.ServicesStartType.SERVICE_BOOT_START">
            <summary>
            系统引导时候开始
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Win32.ServicesStartType.SERVICE_SYSTEM_START">
            <summary>
            系统启动时候开始
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Win32.ServicesStartType.SERVICE_AUTO_START">
            <summary>
            自动开始
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Win32.ServicesStartType.SERVICE_DEMAND_START">
            <summary>
            手动
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.Win32.ServicesStartType.SERVICE_DISABLED">
            <summary>
            禁用
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.ServicesErrorControl">
            <summary>
            Error control
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.ControlManagerAccessTypes">
            <summary>
            Control Manager object specific access types
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.Win32.GENERICFileAccess">
            <summary>
            文件打开控制
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetConnection.SendTo(System.Byte[])">
            <summary>
            发送信息到指定位置
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetConnection.TryOpenNATPort(System.String,System.Int32,System.Byte[],System.Net.Sockets.ProtocolType)">
            <summary>
            尝试打开NAT端口
            </summary>
            <param name="ip">ip地址</param>
            <param name="data">数据</param>
            <param name="type">数据类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetConnection.SendTo(System.String)">
            <summary>
            发送信息到指定位置
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetConnection.Receive">
            <summary>
            发送信息到指定位置
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetConnection.GetData(System.Net.Sockets.Socket)">
            <summary>
            获取流的数据
            </summary>
            <param name="stm"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetConnection.GetSocketMsg(System.Net.Sockets.Socket)">
            <summary>
            获取 Socket 流消息。
            </summary>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetConnection.GetSocketData(System.Net.Sockets.Socket)">
            <summary>
            获取流的数据
            </summary>
            <param name="stm"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.NetClients.NetConnection.CloseConnection">
            <summary>
            关闭连接
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.NetClients.NetConnection.EndPoint">
            <summary>
            IP状态
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.ExpressFunctions.GetHandle(System.String)">
            <summary>
            根据函数名获取函数
            </summary>
            <param name="fName"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExpressFunctions.DoSqrt(System.Double[])">
            <summary>
            开根号
            </summary>
            <param name="nums"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExpressFunctions.DoPow(System.Double[])">
            <summary>
            次幂
            </summary>
            <param name="nums"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExpressionsEval.Eval(System.String)">
            <summary>
            计算带变量的表达式
            </summary>
            <param name="expressions">表达式</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExpressionsEval.Eval">
            <summary>
            计算表达式的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExpressionsEval.GetNumber(System.Text.StringBuilder)">
            <summary>
            从字符串缓冲中获取值
            </summary>
            <param name="tmpNumber">字符串缓冲</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExpressionsEval.Calculation(System.Collections.Generic.LinkedList{System.Double},System.Collections.Generic.LinkedList{System.Char})">
            <summary>
            计算表达式
            </summary>
            <param name="stkNumber">数字栈</param>
            <param name="stkSymbol">符号栈</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExpressionsEval.IsNumber(System.Char)">
            <summary>
            判断是否数字
            </summary>
            <param name="chr">字符</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExpressionsEval.IsOperators(System.Char)">
            <summary>
            判断是否运算符
            </summary>
            <param name="chr">字符</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExpressionsEval.IsNumber(System.String)">
            <summary>
            判断是否数字
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.ExpressionsEval.Result(System.Double,System.Double,System.Char)">
            <summary>
            计算表达式的结果
            </summary>
            <param name="number1">数字1</param>
            <param name="number2">数字2</param>
            <param name="symbol">运算符</param>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Kernel.ExpressionsEval.Params">
            <summary>
            变量集合
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Defaults.TypeItem.ItemType">
            <summary>
            数值类型
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Defaults.TypeItem.DefaultValue">
            <summary>
            数据的默认值
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.UpdateModelUnit.PrefixType">
            <summary>
            命名前缀
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.UpdateModelUnit.PrefixType.None">
            <summary>
            没有前缀
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.UpdateModelUnit.PrefixType.Camel">
            <summary>
            Camel规则，前边都是小写
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.UpdateModelUnit.PrefixType.Three">
            <summary>
            前缀是三个字符
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.UpdateModelUnit.PrefixType.HungarianNotation">
            <summary>
            匈牙利命名法(控件类型_属性名，如：txt_Name)
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.UpdateModelUnit.UpdateModelInfo.GetKey(System.String,Buffalo.Kernel.UpdateModelUnit.PrefixType)">
            <summary>
            根据命名规则获取属性名
            </summary>
            <param name="id">ID</param>
            <param name="pType">类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.UpdateModelUnit.UpdateModelInfo.GetCamelName(System.String)">
            <summary>
            根据Camel规则获取属性名
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.UpdateModelUnit.UpdateModelInfo.GetHungarianNotationName(System.String)">
            <summary>
            根据HungarianNotation规则获取属性名
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Buffalo.Kernel.FastReflection.SetFieldValueHandle">
            <summary>
            快速设置字段值的委托
            </summary>
            <param name="obj">对象</param>
            <param name="value">值</param>
        </member>
        <member name="T:Buffalo.Kernel.FastReflection.GetFieldValueHandle">
            <summary>
            快速获取字段值的委托
            </summary>
            <param name="obj">对象</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastFieldGetSet.GetGetValueHandle(System.Reflection.FieldInfo)">
            <summary>
            获取字段获取值的委托
            </summary>
            <param name="info">字段信息</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastFieldGetSet.GetGetValueHandle(System.Type,System.String)">
            <summary>
            获取字段获取值的委托
            </summary>
            <param name="objType">对象类型</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastFieldGetSet.GetSetValueHandle(System.Reflection.FieldInfo)">
            <summary>
            获取字段设置值的委托
            </summary>
            <param name="info">字段信息</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FastFieldGetSet.GetSetValueHandle(System.Type,System.String)">
            <summary>
            获取字段设置值的委托
            </summary>
            <param name="objType">对象类型</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Kernel.Replacer.ReplaceItem.OldString">
            <summary>
            旧字符串
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Replacer.ReplaceItem.NewString">
            <summary>
            新字符串字符串
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.IniSettings">
            <summary>
            ini配置读取器
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.IniSettings.#ctor(System.String)">
            <summary>
            ini配置读取器
            </summary>
            <param name="filePath">ini文件的路径</param>
        </member>
        <member name="M:Buffalo.Kernel.IniSettings.#ctor(System.IO.Stream)">
            <summary>
            ini配置读取器
            </summary>
            <param name="stm">ini文件的流</param>
        </member>
        <member name="M:Buffalo.Kernel.IniSettings.Load(System.String)">
            <summary>
            加载本程序下的ini文件
            </summary>
            <param name="fileName">ini名称</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.IniSettings.LoadIniConfig(System.IO.Stream)">
            <summary>
            加载Ini配置
            </summary>
            <param name="stm"></param>
            <returns></returns>
        </member>
        <member name="T:Buffalo.Kernel.FieldCloneHelper">
            <summary>
            对对象进行字段克隆
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.FieldCloneHelper.CopyTo(System.Object,System.Object)">
            <summary>
            拷贝数据
            </summary>
            <param name="source">源类</param>
            <param name="target">目标类</param>
        </member>
        <member name="M:Buffalo.Kernel.FieldCloneHelper.Clone(System.Object)">
            <summary>
            克隆
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="F:Buffalo.Kernel.CommonRegular.PhoneNumber">
            <summary>
            固定电话号码
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.CommonRegular.MobilePhone">
            <summary>
            移动电话
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.CommonRegular.AllPhone">
            <summary>
            所有电话号码
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.CommonRegular.ValidateAccount">
            <summary>
            匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.CommonRegular.ValidateQQ">
            <summary>
            匹配腾讯QQ号
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.CommonRegular.Fax">
            <summary>
            传真号码
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.CommonRegular.MailCode">
            <summary>
            邮政编码
            </summary>
        </member>
        <member name="F:Buffalo.Kernel.CommonRegular.OnlyChinese">
            <summary>
            只能有中文
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Replacer.ReplaceItemCollection.MinLength">
            <summary>
            集合中字符串最小的长度
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Replacer.ReplaceItemCollection.MaxLength">
            <summary>
            集合中字符串最大的长度
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ProxyObject.#ctor(System.String,System.String,System.Object[])">
            <summary>
            加载类型
            </summary>
            <param name="filePath">文件名</param>
            <param name="TypeName">类名</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ProxyObject.#ctor(System.Byte[],System.String,System.String,System.Object[])">
            <summary>
            加载类型
            </summary>
            <param name="dllContent">文件内容</param>
            <param name="TypeName">类名</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ProxyObject.#ctor(System.Byte[],System.String,System.Object[])">
            <summary>
            加载类型
            </summary>
            <param name="dllContent">文件内容</param>
            <param name="TypeName">类名</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ProxyObject.#ctor(System.Reflection.Assembly,System.String,System.Object[])">
            <summary>
            加载类型
            </summary>
            <param name="assembly">程序集</param>
            <param name="TypeName">类名</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ProxyObject.#ctor(System.Type,System.Object[])">
            <summary>
            加载类型
            </summary>
            <param name="tp">类型</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ProxyObject.Init(System.Type,System.Object[])">
            <summary>
            初始化
            </summary>
            <param name="assembly">程序集</param>
            <param name="TypeName">类型名</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ProxyObject.Invoke(System.String,System.Object[])">
            <summary>
            运行该函数
            </summary>
            <param name="methodName">函数名</param>
            <param name="args">参数</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ProxyObject.GetParamTypes(System.Object[])">
            <summary>
            获取参数的类型
            </summary>
            <param name="args">参数类型</param>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.ClassInfos.ProxyObject.Item(System.String)">
            <summary>
            设置或获取属性
            </summary>
            <param name="propertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.ClassInfos.ProxyObject.ClassHandle">
            <summary>
            类型信息
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.FastReflection.ClassInfos.ClassFieldInfoCollection">
            <summary>
            字段信息集合
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.ClassInfos.ClassFieldInfoCollection.#ctor(System.Collections.Generic.Dictionary{System.String,Buffalo.Kernel.FastReflection.FieldInfoHandle})">
            <summary>
            属性信息集合
            </summary>
            <param name="FieldInfoHandles">字段信息的哈希表</param>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.ClassInfos.ClassFieldInfoCollection.Item(System.String)">
            <summary>
            根据字段名获取字段信息
            </summary>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.ClassInfos.ClassFieldInfoCollection.Count">
            <summary>
            当前属性的数量
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.SysEventLog">
            <summary>
            系统事件
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.SysEventLog.#ctor(System.String,System.String)">
            <summary>
            系统日志
            </summary>
            <param name="sourceName">源名称</param>
            <param name="logName">日志名</param>
        </member>
        <member name="M:Buffalo.Kernel.SysEventLog.WriteLog(System.String)">
            <summary>
            写入日志
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FieldInfoHandle.#ctor(System.Type,Buffalo.Kernel.FastReflection.GetFieldValueHandle,Buffalo.Kernel.FastReflection.SetFieldValueHandle,System.Type,System.String)">
            <summary>
            创建属性的信息类
            </summary>
            <param name="belong">字段所属的类类型</param>
            <param name="getHandle">get委托</param>
            <param name="setHandle">set委托</param>
            <param name="fieldType">字段数据类型</param>
            <param name="fieldName">字段名</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FieldInfoHandle.SetValue(System.Object,System.Object)">
            <summary>
            给对象设置值
            </summary>
            <param name="args">对象</param>
            <param name="value">值</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FieldInfoHandle.GetValue(System.Object)">
            <summary>
            给对象设置值
            </summary>
            <param name="args">对象</param>
            <param name="value">值</param>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FieldInfoHandle.GetFieldInfos(System.Type,System.Reflection.BindingFlags,System.Boolean)">
            <summary>
            获取字段集合
            </summary>
            <param name="objType">类型</param>
            <param name="inner">是否</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FastReflection.FieldInfoHandle.FillFieldInfos(System.Type,System.Reflection.BindingFlags,System.Collections.Generic.List{Buffalo.Kernel.FastReflection.FieldInfoHandle},System.Collections.Generic.Dictionary{System.String,System.Boolean})">
            <summary>
            填充值
            </summary>
            <param name="objType"></param>
            <param name="flags"></param>
            <param name="fillBase"></param>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.FieldInfoHandle.Belong">
            <summary>
            字段所属的类
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.FieldInfoHandle.SetHandle">
            <summary>
            Set句柄
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.FieldInfoHandle.GetHandle">
            <summary>
            Get句柄
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.FieldInfoHandle.FieldType">
            <summary>
            获取属性的类型
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.FieldInfoHandle.FieldName">
            <summary>
            获取属性的名字
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.FieldInfoHandle.HasGetHandle">
            <summary>
            是否有Get方法
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.FastReflection.FieldInfoHandle.HasSetHandle">
            <summary>
            是否有Set方法
            </summary>
        </member>
        <member name="T:Buffalo.Kernel.FastReflection.ClassInfos.ClassPropertyEnumerator">
            <summary>
            属性的枚举类
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.EnumUnit.AddValue(System.Int32,System.Int32)">
            <summary>
            在属性集合添加一个属性
            </summary>
            <param name="source">属性集合</param>
            <param name="value">要添加的属性值</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.EnumUnit.DeleteValue(System.Int32,System.Int32)">
            <summary>
            在属性集合删除一个属性
            </summary>
            <param name="source">属性集合</param>
            <param name="value">要删除的属性值</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.EnumUnit.ContainerValue(System.Int32,System.Int32)">
            <summary>
            判断集合里边是否含有该属性
            </summary>
            <param name="source">属性集合</param>
            <param name="value">要判断的属性值</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.EnumUnit.GetEnumInfos(System.Type)">
            <summary>
            获取本枚举里边所有属性的信息
            </summary>
            <param name="enumType">枚举类型</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.EnumUnit.GetEnumDescription(System.Enum)">
            <summary>
            获取枚举值的注释
            </summary>
            <param name="objEnum"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.EnumUnit.GetEnumInfo(System.Enum)">
            <summary>
            获取枚举值的信息
            </summary>
            <param name="objEnum">枚举值</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.EnumUnit.GetEnumInfoByName(System.Type,System.String)">
            <summary>
            根据枚举的属性名来获取其信息
            </summary>
            <param name="enumType">枚举类型</param>
            <param name="name">属性名称</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.EnumUnit.EnumString(System.Enum)">
            <summary>
            获取枚举字符串
            </summary>
            <param name="objEnum"></param>
            <returns></returns>
        </member>
        <member name="T:Buffalo.Kernel.SmartSellMap.ICombinationState">
            <summary>
            组合状态拷贝
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.SmartSellMap.ICombinationState.DoBuy(Buffalo.Kernel.SmartSellMap.ICombinationItem)">
            <summary>
            购买并返回是否成功
            </summary>
            <returns></returns>
        </member>
        <member name="T:Buffalo.Kernel.SmartSellMap.CombinationItem`1">
            <summary>
            组合项
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Buffalo.Kernel.SmartSellMap.CombinationItem`1.#ctor(`0,System.Int32,Buffalo.Kernel.SmartSellMap.ICombinationState,Buffalo.Kernel.SmartSellMap.CombinationItem{`0})">
            <summary>
            组合项
            </summary>
            <param name="previous"></param>
        </member>
        <member name="M:Buffalo.Kernel.SmartSellMap.CombinationItem`1.ToList">
            <summary>
            返回组合合
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Kernel.SmartSellMap.CombinationItem`1.ItemIndex">
            <summary>
            所属项索引
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.SmartSellMap.CombinationItem`1.Item">
            <summary>
            项
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.SmartSellMap.CombinationItem`1.Previous">
            <summary>
            上一个
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.SmartSellMap.CombinationItem`1.Sender">
            <summary>
            购买者
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.SmartSellMap.CombinationItem`1.TotlePoint">
            <summary>
            剩余积分
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.GetForLen(System.Byte[])">
            <summary>
            获取循环的长度
            </summary>
            <param name="arr"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.DoAnd(System.Byte[])">
            <summary>
            进行and运算
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.DoOr(System.Byte[])">
            <summary>
            进行Or运算
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.DoXor(System.Byte[])">
            <summary>
            进行Or运算
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.AddProperty(System.Byte[])">
            <summary>
            添加一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.AddProperty(System.UInt32)">
            <summary>
            添加一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.AddProperty(System.Int32)">
            <summary>
            添加一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.AddProperty(System.Double)">
            <summary>
            添加一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.AddProperty(System.Single)">
            <summary>
            添加一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.AddProperty(System.Int64)">
            <summary>
            添加一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.AddProperty(System.Int16)">
            <summary>
            添加一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.AddProperty(System.UInt64)">
            <summary>
            添加一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.AddProperty(System.UInt16)">
            <summary>
            添加一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.AddProperty(System.Char)">
            <summary>
            添加一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.AddProperty(System.Enum)">
            <summary>
            添加一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.DeleteProperty(System.Byte[])">
            <summary>
            删除一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.DeleteProperty(System.Int32)">
            <summary>
            删除一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.DeleteProperty(System.UInt32)">
            <summary>
            删除一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.DeleteProperty(System.Char)">
            <summary>
            删除一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.DeleteProperty(System.Double)">
            <summary>
            删除一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.DeleteProperty(System.Single)">
            <summary>
            删除一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.DeleteProperty(System.Int64)">
            <summary>
            删除一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.DeleteProperty(System.Int16)">
            <summary>
            删除一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.DeleteProperty(System.UInt64)">
            <summary>
            删除一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.DeleteProperty(System.UInt16)">
            <summary>
            删除一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.DeleteProperty(System.Enum)">
            <summary>
            删除一个属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.Contains(System.Byte[])">
            <summary>
            返回一个布尔型，指示是否含有指定值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.Contains(System.Double)">
            <summary>
            返回一个布尔型，指示是否含有指定值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.Contains(System.Char)">
            <summary>
            返回一个布尔型，指示是否含有指定值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.Contains(System.Single)">
            <summary>
            返回一个布尔型，指示是否含有指定值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.Contains(System.Int32)">
            <summary>
            返回一个布尔型，指示是否含有指定值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.Contains(System.Int64)">
            <summary>
            返回一个布尔型，指示是否含有指定值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.Contains(System.Int16)">
            <summary>
            返回一个布尔型，指示是否含有指定值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.Contains(System.UInt32)">
            <summary>
            返回一个布尔型，指示是否含有指定值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.Contains(System.UInt64)">
            <summary>
            返回一个布尔型，指示是否含有指定值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.Contains(System.UInt16)">
            <summary>
            返回一个布尔型，指示是否含有指定值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Buffalo.Kernel.Commons.PropertyType.Contains(System.Enum)">
            <summary>
            返回一个布尔型，指示是否含有指定值
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Buffalo.Kernel.Commons.PropertyType.IntValue">
            <summary>
            整型值
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Commons.PropertyType.CharValue">
            <summary>
            字符型
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Commons.PropertyType.DoubleValue">
            <summary>
            双精度型
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Commons.PropertyType.ShortValue">
            <summary>
            短整型
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Commons.PropertyType.LongValue">
            <summary>
            长整型
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Commons.PropertyType.FloatValue">
            <summary>
            浮点型
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Commons.PropertyType.ULongValue">
            <summary>
            无符号长整型
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Commons.PropertyType.UIntValue">
            <summary>
            无符号整型值
            </summary>
        </member>
        <member name="P:Buffalo.Kernel.Commons.PropertyType.UShortValue">
            <summary>
            无符号短整型
            </summary>
        </member>
        <member name="M:Buffalo.Kernel.FileEncodingInfo.GetEncodingType(System.String,System.Boolean)">
            <summary>
            给定文件的路径，读取文件的二进制数据，判断文件的编码类型
            </summary>
            <param name="fileName">文件路径</param>
            <param name="valNotBOM">是否验证没BOM的</param>
            <returns>文件的编码类型</returns>
        </member>
        <member name="M:Buffalo.Kernel.FileEncodingInfo.GetEncodingType(System.IO.Stream,System.Boolean)">
            <summary>
            通过给定的文件流，判断文件的编码类型
            </summary>
            <param name="fs">文件流</param>
            <returns>文件的编码类型</returns>
        </member>
        <member name="M:Buffalo.Kernel.FileEncodingInfo.IsEncoding(System.Byte[],System.Byte[])">
            <summary>
            是否此编码
            </summary>
            <param name="buffer">内容</param>
            <param name="headContent">文件头内容</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Kernel.FileEncodingInfo.IsUTF8Bytes(System.Byte[])">
            <summary>
            判断是否是不带 BOM 的 UTF8 格式
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
    </members>
</doc>
