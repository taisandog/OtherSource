<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Buffalo.Win32Kernel</name>
    </assembly>
    <members>
        <member name="T:Buffalo.Win32Kernel.Win32.HardwareInfo">
            <summary>
            得到硬盘与CPU的ID及网卡MAC
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.HardwareInfo.GetHostName">
            <summary>
            取机器名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.HardwareInfo.GetCpuID">
            <summary>
            取CPU编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.HardwareInfo.GetHardDiskID">
            <summary>
            取第一块硬盘编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.HardwareInfo.GetMacAddress">
            <summary>
            得到网卡MAC
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.HardwareInfo.GetMacByIP(System.String)">
            <summary>
            根据IP获取MAC
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIR_STRING_U.Length">
            <summary>
            字符串长度
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIR_STRING_U.NameString">
            <summary>
            unicode字符串
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ExportInfo">
            <summary>
            输出表的信息
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ExportInfo.Address">
            <summary>
            函数地址
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ExportInfo.Name">
            <summary>
            函数名
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ExportInfo.NameRAV">
            <summary>
            名称的RAV
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_DIRECTORY_ENTRY_TLS.IMAGE_TLS_DIRECTORY32.StartAddressOfRawData">
            <summary>
            内存起始地址
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_DIRECTORY_ENTRY_TLS.IMAGE_TLS_DIRECTORY32.EndAddressOfRawData">
            <summary>
            内存终止地址
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_DIRECTORY_ENTRY_TLS.IMAGE_TLS_DIRECTORY32.AddressOfIndex">
            <summary>
            运行库使用这个索引来定位局部数据
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_DIRECTORY_ENTRY_TLS.IMAGE_TLS_DIRECTORY32.AddressOfCallBacks">
            <summary>
            PIMAGE_TLS_CALLBACK函数指针数组地址
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_DIRECTORY_ENTRY_TLS.IMAGE_TLS_DIRECTORY32.SizeOfZeroFill">
            <summary>
            后边跟零的个数
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_DIRECTORY_ENTRY_TLS.IMAGE_TLS_DIRECTORY32.Characteristics">
            <summary>
            保留，设为0
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.Win32.WindowsApplication">
            <summary>
            系统程序
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.WindowsApplication.DebugKillProcessById(System.Int32)">
            <summary>
            用Debug模式关闭进程(本进程也会关闭)
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.WindowsApplication.KillProcess(System.Int32)">
            <summary>
            关闭进程
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.WindowsApplication.EnablePrivilege(System.Boolean)">
            <summary>
            提升Debug权限
            </summary>
            <param name="enable"></param>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.WindowsApplication.SetWallPaper(System.String)">
            <summary>
            设置壁纸
            </summary>
            <param name="picRoot">壁纸路径</param>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.WindowsApplication.PrintScreen(System.Drawing.Rectangle)">
            <summary>
            截取屏幕
            </summary>
            <param name="rect">开始截取位置</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.WindowsApplication.PrintScreen">
            <summary>
            截取屏幕
            </summary>
            <param name="rect">开始截取位置</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.WindowsApplication.RefreashRegist">
            <summary>
            刷新注册表
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.WindowsApplication.DoExitWin(Buffalo.Kernel.Win32.EWX)">
            <summary>
            退出系统
            </summary>
            <param name="flg">标识</param>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.KeyBoardListener.SetCombination(System.Int32,System.Boolean)">
            <summary>
            设置组合键
            </summary>
            <param name="vkCode"></param>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.KeyBoardListener.MakeKeys(System.Int32)">
            <summary>
            组合按键信息
            </summary>
            <param name="vkCode"></param>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Win32Kernel.Win32.KeyBoardListener.IsListening">
            <summary>
            是否已经监控
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceDirectoryEntryInfo.ResourceDirectorEntry">
            <summary>
            资源目录入口
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceDirectoryEntryInfo.ResourceDirString">
            <summary>
            字符串
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceDirectoryEntryInfo.NextDirectory">
            <summary>
            下一层目录
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceDirectoryEntryInfo.ValueData">
            <summary>
            指向的资源
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.ProcessUrlRegistry.CheckReg(System.String)">
            <summary>
            检查注册表
            </summary>
            <param name="processName"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.ProcessUrlRegistry.RegistryTo(System.String,System.String)">
            <summary>
            注册程序
            </summary>
            <param name="processName"></param>
            <param name="fileName"></param>
        </member>
        <member name="T:Buffalo.Win32Kernel.UpdateModelUnit.ModelUpdateHelper">
            <summary>
            实体填充帮助类
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.UpdateModelUnit.ModelUpdateHelper.UpdateModel(System.Windows.Forms.Control,System.Object)">
            <summary>
            更新实体
            </summary>
            <param name="container">容器</param>
            <param name="model">实体</param>
            <param name="type">命名类型</param>
        </member>
        <member name="M:Buffalo.Win32Kernel.UpdateModelUnit.ModelUpdateHelper.UpdateModel(System.Windows.Forms.Control,System.Object,Buffalo.Kernel.UpdateModelUnit.PrefixType)">
            <summary>
            更新实体
            </summary>
            <param name="container">容器</param>
            <param name="model">实体</param>
            <param name="type">命名类型</param>
        </member>
        <member name="M:Buffalo.Win32Kernel.UpdateModelUnit.ModelUpdateHelper.SetModelValue(System.Windows.Forms.Control,System.Object,Buffalo.Kernel.FastReflection.PropertyInfoHandle)">
            <summary>
            给模型赋值
            </summary>
            <param name="ctr">控件</param>
            <param name="model">模型</param>
            <param name="handle">属性信息</param>
        </member>
        <member name="M:Buffalo.Win32Kernel.UpdateModelUnit.ModelUpdateHelper.FillForm(System.Windows.Forms.Control,System.Object)">
            <summary>
            实体信息填充到表单
            </summary>
            <param name="container">容器</param>
            <param name="model">实体</param>
        </member>
        <member name="M:Buffalo.Win32Kernel.UpdateModelUnit.ModelUpdateHelper.FillForm(System.Windows.Forms.Control,System.Object,Buffalo.Kernel.UpdateModelUnit.PrefixType)">
            <summary>
            实体信息填充到表单
            </summary>
            <param name="container">容器</param>
            <param name="model">实体</param>
            <param name="type">命名类型</param>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ImageResourceInfo.LoadInfo">
            <summary>
            加载信息
            </summary>
            <param name="deep">层深</param>
            <param name="baseOffest">基地址</param>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ImageResourceInfo.ResourceDirectory">
            <summary>
            资源信息
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ImageResourceInfo.LstResourceInfo">
            <summary>
            资源信息集合
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.PELibrary.Enums.SubSystemType">
            <summary>
            执行文件所期望的子系统的枚举值
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.SubSystemType.UnKnow">
            <summary>
            未知文件
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.SubSystemType.UnNecessary">
            <summary>
            不需要子系统
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.SubSystemType.GUI">
            <summary>
            图形接口子系统
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.SubSystemType.CUI">
            <summary>
            字符子系统
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.SubSystemType.OS2CUI">
            <summary>
            OS/2字符子系统
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.SubSystemType.POSIX">
            <summary>
            POSIX字符子系统
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.SubSystemType.Reserved">
            <summary>
            保留
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.SubSystemType.WinCE">
            <summary>
            Windows CE图形界面
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.ServicesUnit.ServiceInfo">
            <summary>
            服务安装信息
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.ServicesUnit.ServiceInfo.GetServicesByName(System.String)">
            <summary>
            获取服务信息
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.ServicesUnit.ServiceInfo.FillServicesInfo(Buffalo.Win32Kernel.ServicesUnit.ServiceInfo)">
            <summary>
            填充服务的信息
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Buffalo.Win32Kernel.ServicesUnit.ServiceInfo.GetController">
            <summary>
            服务控制器
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.ServicesUnit.ServiceInfo.Remove">
            <summary>
            删除此服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.ServicesUnit.ServiceInfo.Save">
            <summary>
            保存配置
            </summary>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Win32Kernel.ServicesUnit.ServiceInfo.Name">
            <summary>
            服务名
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.ServicesUnit.ServiceInfo.DisplayName">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.ServicesUnit.ServiceInfo.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.ServicesUnit.ServiceInfo.StarType">
            <summary>
            启动类型
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.ServicesUnit.ServiceInfo.StateInfo">
            <summary>
            当前服务状态
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.ServicesUnit.ServiceInfo.Path">
            <summary>
            服务路径
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.ServicesUnit.ServiceInfo.Exists">
            <summary>
            是否存在
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd">
            <summary>
            屏幕截圖器。
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            將屏幕圖象繪制為為本窗口的背景。
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.ScreenWnd_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            按 ESC 鍵時取消屏幕截圖。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.DrawSelection">
            <summary>
            繪制選區表現。
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.MoveSelection(System.Int32,System.Int32)">
            <summary>
            已選中區域的移動表現。
            </summary>
            <param name="MouseX">當前鼠標的 X 坐標</param>
            <param name="MouseY">當前鼠標的 Y 坐標</param>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.ResizeSelection(Buffalo.Win32Kernel.ScreenLibrary.ResizeType,System.Int32,System.Int32)">
            <summary>
            调整选区的大小。
            </summary>
            <param name="Resize">选区的大小调整方式。</param>
            <param name="X">当前鼠标的 X 坐标。</param>
            <param name="Y">当前鼠标的 Y 坐标。</param>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            当鼠标按下时。
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            当鼠标弹起时。
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            当鼠标移动时。
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.CancelScreenshots">
            <summary>
            取消截圖。
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.ScreenshotsComplete">
            <summary>
            完成截圖。
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.contextMenuStrip1_Opening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            控制截圖菜單的可用性。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.smi_Cancel_Click(System.Object,System.EventArgs)">
            <summary>
            點擊取菜命令時。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.smi_OK_Click(System.Object,System.EventArgs)">
            <summary>
            點擊完成命令時。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.ScreenWnd.ScreenWnd_DoubleClick(System.Object,System.EventArgs)">
            <summary>
            選定區域後雙擊完成截圖。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DATA_DIRECTORY.VirtualAddress">
            <summary>
            起始块RAV
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DATA_DIRECTORY.Size">
            <summary>
            数据块长度
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceEntry">
            <summary>
            资源信息
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceEntry.Name">
            <summary>
            资源名
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceEntry.ResourceInfo">
            <summary>
            资源的指向信息
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_NT_HEADERS.Signature">
            <summary>
             PE文件头标志:"PE\0\0"
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_NT_HEADERS.FileHeader">
            <summary>
            PE文件物理分布的信息
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_NT_HEADERS.OptionalHeader">
            <summary>
            PE文件逻辑分布的信息
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.Win32.RegistryUtil">
            <summary>
            Summary description for Registry.
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.AsmManager.RunAsm(System.Byte[],System.Int32)">
            <summary>
            开启新线程运行asm代码
            </summary>
            <param name="asmCode"></param>
            <param name="pid"></param>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DATA_ENTRY.OffsetToData">
            <summary>
            资源数据的RVA
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DATA_ENTRY.Size">
            <summary>
            资源数据长度
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DATA_ENTRY.CodePage">
            <summary>
            代码页，一般为0
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DATA_ENTRY.Reserved">
            <summary>
            保留字段
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.Resource">
            <summary>
              强类型资源类，用于查找本地化字符串等。
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.Resource.ResourceManager">
            <summary>
              返回此类使用的缓存 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.Resource.Culture">
            <summary>
              为使用此强类型资源类的所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceItem.Type">
            <summary>
            资源类型
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceItem.Entrys">
            <summary>
            信息集合
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.PELibrary.Enums.ImageOptionalMagicType">
            <summary>
            标记字类型
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ImageOptionalMagicType.UnKnow">
            <summary>
            未知文件
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ImageOptionalMagicType.RomImage">
            <summary>
            ROM影像文件
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ImageOptionalMagicType.CommonExe">
            <summary>
            普通可执行文件
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ImageOptionalMagicType.PE32">
            <summary>
            PE32+文件
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.ThreadCycle.GetCurTnreadCycle">
            <summary>
            获取当前线程周期
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.ThreadCycle.Star">
            <summary>
            开始
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.ThreadCycle.Stop">
            <summary>
            停止
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.ThreadCycle.TotleCycle">
            <summary>
            获取一共用了多少CPU周期
            </summary>
            <returns></returns>
        </member>
        <member name="T:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER">
            <summary>
            DOS的.EXE头部(struct _IMAGE_DOS_HEADER)
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_magic">
            <summary>
            魔术数字(MZ头值为 0x5A4D)
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_cblp">
            <summary>
            文件最后页的字节数
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_cp">
            <summary>
            文件页数
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_crlc">
            <summary>
            重定义元素个数
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_cparhdr">
            <summary>
            头部尺寸，以段落为单位
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_minalloc">
            <summary>
            所需的最小附加段
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_maxalloc">
            <summary>
            所需的最大附加段
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_ss">
            <summary>
            初始的SS值(相对偏移量)
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_sp">
            <summary>
            初始的SP值
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_csum">
            <summary>
            校验和
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_ip">
            <summary>
            初始的IP值
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_cs">
            <summary>
            初始的CS值(相对偏移量)
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_lfarlc">
            <summary>
            重分配表文件地址
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_ovno">
            <summary>
            覆盖号
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_res">
            <summary>
            保留字
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_oemid">
            <summary>
            OEM标识符(相对e_oeminfo)
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_oeminfo">
            <summary>
            OEM信息
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_res2">
            <summary>
            保留字2
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_lfanew">
            <summary>
            新exe头部的文件地址
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.IllegalCrossControl.SetProperty(System.Windows.Forms.Control,System.String,System.Object)">
            <summary>
            设置控件的属性
            </summary>
            <param name="ctr">要设置的控件</param>
            <param name="propertyName">属性名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Buffalo.Win32Kernel.IllegalCrossControl.InvokeMethod(System.Windows.Forms.Control,System.String,System.Type[],System.Object[])">
            <summary>
            设置控件的属性
            </summary>
            <param name="ctr">要设置的控件</param>
            <param name="methodName">函数名</param>
            <param name="parametersType">参数类型</param>
            <param name="args">参数</param>
        </member>
        <member name="T:Buffalo.Win32Kernel.Win32.RegExportImport">
            <summary>
            该类是对注册表导入导出的操作
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.RegExportImport.ExportReg(System.String,System.String)">
            <summary>
            从注册表导出到文件，在导出的过程是异步的，不受操作进程管理
            </summary>
            <param name="SavingFilePath">从注册表导出的文件，如果是已存在的，会提示覆盖；
            如果不存在由参数指定名字的文件，将自动创建一个。导出的文件的扩展名应当是.REG的</param>
            <param name="regPath">指定注册表的某一键被导出，如果指定null值，将导出整个注册表</param>
            <returns>成功返回0，用户中断返回1</returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.RegExportImport.ImportReg(System.String,System.String)">
            <summary>
            从文件导入的注册表
            </summary>
            <param name="SavedFilePath">指定在磁盘上存在的文件，如果指定的文件不存在，将抛出异常</param>
            <param name="regPath">指定注册表的键（包含在SavedFilePath文件中保存的关键字），如果该参数设置为null将导入整个SavedFilePath文件
            中保存的所有关于注册表的关键字</param>
            <returns>成功返回0</returns>
        </member>
        <member name="T:Buffalo.Win32Kernel.UpdateModelUnit.ControlDefaultValue">
            <summary>
            获取控件的默认属性的类
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.UpdateModelUnit.ControlDefaultValue.GetDefaultPropertyName(System.Windows.Forms.Control)">
            <summary>
            获取该类的默认属性名
            </summary>
            <param name="ctr">控件</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.UpdateModelUnit.ControlDefaultValue.GetDefaultContorltPropertyName(System.Windows.Forms.Control)">
            <summary>
            获取系统预设的控件类型的默认属性名
            </summary>
            <param name="ctr">控件</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.UpdateModelUnit.ControlDefaultValue.GetDefaultPropertyValue(System.Reflection.PropertyInfo)">
            <summary>
            获取该属性的默认值
            </summary>
            <param name="pinf">字段信息</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.UpdateModelUnit.ControlDefaultValue.GetDefaultPropertyInfo(System.Windows.Forms.Control)">
            <summary>
            获取控件的默认属性的信息
            </summary>
            <param name="ctr"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.UpdateModelUnit.ControlDefaultValue.GetDefaultPropertyInfoWithoutCache(System.Windows.Forms.Control)">
            <summary>
            无缓存的获取控件默认值
            </summary>
            <param name="ctr"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.UpdateModelUnit.ControlDefaultValue.ResetContorlValue(System.Windows.Forms.Control)">
            <summary>
            重置控件的默认值
            </summary>
            <param name="ctr">控件</param>
        </member>
        <member name="M:Buffalo.Win32Kernel.UpdateModelUnit.ControlDefaultValue.GetControlDefaultPropertyValue(System.Windows.Forms.Control)">
            <summary>
            获取该控件的默认属性
            </summary>
            <param name="ctr">控件</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.UpdateModelUnit.ControlDefaultValue.GetControlDefaultPropertyValue(System.Windows.Forms.Control,Buffalo.Kernel.UpdateModelUnit.ContorlDefaultPropertyInfo)">
            <summary>
            获取该控件的默认属性
            </summary>
            <param name="ctr">控件</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.UpdateModelUnit.ControlDefaultValue.SetControlDefaultPropertyValue(System.Windows.Forms.Control,System.Object)">
            <summary>
            设置该控件的默认属性
            </summary>
            <param name="ctr">控件</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ImportDescriptorInfo.SetDescriptorName">
            <summary>
            设置dll名称的值
            </summary>
            <param name="nameValue"></param>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ImportDescriptorInfo.LoadInputAddressThunk">
            <summary>
            加载输入地址表(IAT)
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ImportDescriptorInfo.LoadInputNameThunk">
            <summary>
            加载输入名称表(INT)
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ImportDescriptorInfo.LoadThunk(System.UInt32)">
            <summary>
            加载输入表
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ImportDescriptorInfo.ImportDescriptor">
            <summary>
            输入表信息
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ImportDescriptorInfo.IatInfos">
            <summary>
            地址名称表(IAT)数组
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ImportDescriptorInfo.IntInfos">
            <summary>
            输入名称表(INT)数组
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEHandle.LoadNTHead">
            <summary>
            加载NT头
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEHandle.FindSectionHeader(System.UInt32)">
            <summary>
            找出当前虚拟偏移所在的区段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEHandle.RVAToFileOffest(System.UInt32)">
            <summary>
            虚拟偏移转换成文件相对位置
            </summary>
            <param name="rav">内存相对地址</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEHandle.VaToFileOffest(System.UInt32)">
            <summary>
            虚拟地址转换成文件相对位置
            </summary>
            <param name="rav">内存相对地址</param>
            <returns></returns>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEHandle.SectionHeaders">
            <summary>
            区块
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEHandle.DosHeader">
            <summary>
            DOS头
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEHandle.NtHeader">
            <summary>
            NT头
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.PELibrary.Enums.BaseRelocatioType">
            <summary>
            重定位类型
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.BaseRelocatioType.ImageRelBasedAbsolute">
            <summary>
            Image_Rel_Based_Absolute 没有含义为了让4位字节对齐
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.BaseRelocatioType.ImageRelBasedHighlow">
            <summary>
            Image_Rel_Based_Highlow 重定位指向的整个地址都被修正
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.BaseRelocatioType.ImageRelBasedDir64">
            <summary>
            Image_Rel_Based_Dir64 出现在64位PE文件中，对指向的整个地址修正
            </summary>
        </member>
        <!-- 对于成员“M:Buffalo.Win32Kernel.SingleForms.IsControlExists(System.Windows.Forms.Control)”忽略有格式错误的 XML 注释 -->
        <member name="M:Buffalo.Win32Kernel.SingleForms.GetControl(System.String,System.Object[])">
            <summary>
            根据Form的类型获取其实例
            </summary>
            <param name="typeName">类型名</param>
            <param name="args">参数</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.SingleForms.GetControl(System.Type,System.Object[])">
            <summary>
            根据Form的类型获取其实例
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.SingleForms.GetControl``1(System.Object[])">
            <summary>
            获取指定窗体
            </summary>
            <typeparam name="T">窗体类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.SingleForms.GetForm``1(System.Object[])">
            <summary>
            获取指定窗体
            </summary>
            <typeparam name="T">窗体类型</typeparam>
            <returns></returns>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.IMAGE_IMPORT_DESCRIPTOR.OriginalFirstThunk">
            <summary>
            指向包含输入名称表(INT)的RVA 或者是属性
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.IMAGE_IMPORT_DESCRIPTOR.TimeDateStamp">
            <summary>
            32位时间标记
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.IMAGE_IMPORT_DESCRIPTOR.ForwarderChain">
            <summary>
            第一个被转向的API索引，一般为0
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.IMAGE_IMPORT_DESCRIPTOR.Name">
            <summary>
            dll名字的指针(以00结尾的RAV地址)
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.IMAGE_IMPORT_DESCRIPTOR.FirstThunk">
            <summary>
            指向包含地址名称表(IAT)的RVA 或者是属性
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.Misc.PhysicalAddress">
            <summary>
            
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_SECTION_HEADER.Name">
            <summary>
            节表名称
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_SECTION_HEADER.Misc">
            <summary>
            区块尺寸
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_SECTION_HEADER.VirtualAddress">
            <summary>
            虚拟地址
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_SECTION_HEADER.SizeOfRawData">
            <summary>
            文件对齐后的尺寸
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_SECTION_HEADER.PointerToRawData">
            <summary>
            节基于文件的偏移量
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_SECTION_HEADER.PointerToRelocations">
            <summary>
            重定位的偏移
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_SECTION_HEADER.PointerToLinenumbers">
            <summary>
            行号表的偏移
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_SECTION_HEADER.NumberOfRelocations">
            <summary>
            重定位项数目
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_SECTION_HEADER.NumberOfLinenumbers">
            <summary>
            行号表的数目
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_SECTION_HEADER.Characteristics">
            <summary>
            节属性
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.ComboBoxItem">
            <summary>
            ComboBox的项
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.ComboBoxItem.Text">
            <summary>
            要显示的文本
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.ComboBoxItem.Tag">
            <summary>
            值
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.Win32.ParallelPort">
            <summary>
            并口控制类
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.ParallelPort.WriteData(System.Byte[])">
            <summary>
            写入数据
            </summary>
            <param name="data">数据</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.ParallelPort.ReadData(System.Int32)">
            <summary>
            读状态
            </summary>
            <param name="len">长度</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.ParallelPort.Open">
            <summary>
            打开端口
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.ParallelPort.Close">
            <summary>
            关闭端口
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.ParallelPort.#ctor(System.String)">
            <summary>
            并口通信
            </summary>
            <param name="portName"></param>
        </member>
        <member name="P:Buffalo.Win32Kernel.Win32.ParallelPort.IsOpen">
            <summary>
            是否开启
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.Win32.ParallelPort.Name">
            <summary>
            并口名
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.Win32.ParallelPort.BasePort">
            <summary>
            端口基址
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ImageExportDirectoryInfo.LoadInfo">
            <summary>
            加载信息
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ImageExportDirectoryInfo.ReadExportAddressTable">
            <summary>
            找出按地址输出的函数信息集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ImageExportDirectoryInfo.FindExportNameTable(Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ExportInfo[])">
            <summary>
            找出按名字输出的函数信息集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ImageExportDirectoryInfo.FillExportName(Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ExportInfo[])">
            <summary>
            给按名称输出的函数信息填充名字
            </summary>
            <param name="eat"></param>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ImageExportDirectoryInfo.ImageExportInfo">
            <summary>
            输出信息
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_SECTION_Characteristics">
            <summary>
            区块属性类
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_CNT_CODE">
            <summary>
            包含代码，常与10000000H一起设置
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_CNT_INITIALIZED_DATA">
            <summary>
            该块包含已初始化的数据
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_CNT_UNINITIALIZED_DATA">
            <summary>
            该块包含未初始化的数据
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_MEM_DISCARDABLE">
            <summary>
            该块可被丢弃，因为它一旦被装入后，进程就不再需要它了常见的可丢弃块寺.reloc(重定位块)
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_MEM_SHARED">
            <summary>
            该块为共享
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_MEM_EXECUTE">
            <summary>
            该块为可执行。通常当00000020H标志被设置时，该标志也被设置
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_MEM_READ">
            <summary>
            该块可读。可执行文件中的块总是设置该块标志
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_MEM_WRITE">
            <summary>
            该块可写。如果可执行文件没有设置该标志，装载程序就将在内存映象页标记为可读或可执行
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.HotKey.Register">
            <summary>
            注册此热键
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.Win32.HotKey.UnRegister">
            <summary>
            卸载此热键热键
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.Win32.HotKey.Id">
            <summary>
            热键的标识
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.Win32.HotKey.ModifierKey">
            <summary>
            屏蔽键
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.Win32.HotKey.Key">
            <summary>
            按键
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.Win32.HotKey.BindControl">
            <summary>
            绑定的控件s
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.Win32.HotKey.IsRegistered">
            <summary>
            是否已经注册了热键
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.ServicesUnit.ServicesManager.BindService">
            <summary>
            获取服务集合
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.ServicesUnit.ServicesManager.GetController(System.String)">
            <summary>
            获取服务
            </summary>
            <param name="servicesName"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.ServicesUnit.ServicesManager.RefreashServices">
            <summary>
            刷新服务缓存
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.ServicesUnit.ServicesManager.InstallServices(Buffalo.Win32Kernel.ServicesUnit.ServiceInfo)">
            <summary>
            创建服务
            </summary>
            <param name="servicesName"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.ServicesUnit.ServicesManager.SetDescription(Buffalo.Win32Kernel.ServicesUnit.ServiceInfo)">
            <summary>
            设置注释
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.ServicesUnit.ServicesManager.GetServicesKey(System.String)">
            <summary>
            获取服务所在的注册表
            </summary>
            <param name="servicesName"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.ServicesUnit.ServicesManager.UnInstallServices(System.ServiceProcess.ServiceController)">
            <summary>
            卸载服务
            </summary>
            <param name="servicesName"></param>
            <returns></returns>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY_ENTRY.Name">
            <summary>
            目录项名称字符串指针或ID
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY_ENTRY.OffsetToData">
            <summary>
            资源数据偏移地址或子目录偏移地址
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_BOUND_IMPORT_DESCRIPTORS.BoundImportInfo.LoadInfo(System.UInt32)">
            <summary>
            加载绑定表的信息
            </summary>
            <param name="fristIBIDOffest">第一个结构体的文件偏移</param>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_BOUND_IMPORT_DESCRIPTORS.BoundImportInfo.IsNull">
            <summary>
            判断对象是否为空
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32">
            <summary>
            可选择头(IMAGE_OPTIONAL_HEADER)
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.Magic">
            <summary>
            标记字
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MajorLinkerVersion">
            <summary>
            链接器的主版本号
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MinorLinkerVersion">
            <summary>
            链接器的次版本号
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfCode">
            <summary>
            可执行代码的长度
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfInitializedData">
            <summary>
            初始化数据的长度（数据段）
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfUninitializedData">
            <summary>
            未初始化数据的长度（bss段）
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.AddressOfEntryPouint">
            <summary>
            代码的入口RVA地址，程序从这儿开始执行，常称为程序的原入口点OEP（Original Entry Pouint）
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.BaseOfCode">
            <summary>
            可执行代码起始位置
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.BaseOfData">
            <summary>
            初始化数据起始位置
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.ImageBase">
            <summary>
            载入程序首选的RVA地址。这个地址可被Loader改变
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SectionAlignment">
            <summary>
            段加载后在内存中的对齐值
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.FileAlignment">
            <summary>
            段在文件中的对齐方式
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MajorOperatingSystemVersion">
            <summary>
            操作系统最低版本号的主版本号
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MinorOperatingSystemVersion">
            <summary>
            操作系统最低版本号的次版本号
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MajorImageVersion">
            <summary>
            程序的主版本号
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MinorImageVersion">
            <summary>
            程序的子版本号
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MajorSubsystemVersion">
            <summary>
            要求最低子系统版本的主版本号
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MinorSubsystemVersion">
            <summary>
            要求最低子系统版本的次版本号
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.Win32VersionValue">
            <summary>
            这个值总是为0
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfImage">
            <summary>
            程序调入后占用内存大小（字节），等于所有段的长度之和
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfHeaders">
            <summary>
            所有文件头长度之和，它等于从文件开始到第一个段的原始数据之间的大小
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.CheckSum">
            <summary>
            校验和，仅用在驱动程序中，在可执行文件中可能为0。它的计算方法Microsoft不公开，在imagehelp.dll中的CheckSumMappedFile()函数可以计算它
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.Subsystem">
            <summary>
            一个标明可执行文件所期望的子系统的枚举值
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.DllCharacteristics">
            <summary>
            DLL状态
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfStackReserve">
            <summary>
            保留堆栈大小
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfStackCommit">
            <summary>
            启动后实际申请的堆栈数，可随实际情况变大
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfHeapReserve">
            <summary>
            保留堆大小
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfHeapCommit">
            <summary>
            实际堆大小
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.LoaderFlags">
            <summary>
            加载标志(与调试有关，默认为0)
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.NumberOfRvaAndSizes">
            <summary>
            目录表入口个数，这个值也不可靠，可用常数
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.DataDirectory">
            <summary>
            数据目录表集合
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.Win32.MessageBoxEx.DefaultLCID">
            <summary>
            默认区域ID
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.FormInfo">
            <summary>
            窗体的信息
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.FormInfo.GetContorlText(System.IntPtr)">
            <summary>
            获取控件的文本值
            </summary>
            <param name="txthandle"></param>
            <returns></returns>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_BOUND_IMPORT_DESCRIPTORS.IMAGE_BOUND_IMPORT_DESCRIPTOR.TimeDateStamp">
            <summary>
            被输入dll的时间戳
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_BOUND_IMPORT_DESCRIPTORS.IMAGE_BOUND_IMPORT_DESCRIPTOR.OffsetModuleName">
            <summary>
            指向dll的名称的偏移(跟第一个IBID)
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_BOUND_IMPORT_DESCRIPTORS.IMAGE_BOUND_IMPORT_DESCRIPTOR.NumberOfModuleForwarderRefs">
            <summary>
            给出这个DLL文件为它的中转使用的DLL文件数
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_FILE_Characteristics.NoRelocating">
            <summary>
            文件不存在重定位信息
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_FILE_Characteristics.Execute">
            <summary>
            文件可执行，如果为0则可能链接时候出问题了
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_FILE_Characteristics.LinenumberRemoved">
            <summary>
            行号信息被移去
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_FILE_Characteristics.SymbolRemoved">
            <summary>
            符号信息被移去
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_FILE_Characteristics.Flat">
            <summary>
            应用程序地址超过2GB地址
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_FILE_Characteristics.LowBitByteInstead">
            <summary>
            处理机的低字节位相反
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_FILE_Characteristics.Platform32Bit">
            <summary>
            目标平台是32位机器
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_FILE_Characteristics.DBGRemoved">
            <summary>
            DBG文件调试信息被移去
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_FILE_Characteristics.CopyFromMobile">
            <summary>
            如果映象文件在可移动设备中，则先复制到交换文件后再运行
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_FILE_Characteristics.CopyFromNetwork">
            <summary>
            如果映象文件在网络中，则先复制到交换文件后再运行
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_FILE_Characteristics.SystemFile">
            <summary>
            系统文件
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_FILE_Characteristics.DllFile">
            <summary>
            Dll文件
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_FILE_Characteristics.SingleProcessor">
            <summary>
            文件只能运行在单处理器上
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.IMAGE_FILE_Characteristics.HighBitByteInstead">
            <summary>
            处理机的高位字节是相反的
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.ScreenLibrary.ResizeType">
            <summary>
            表示調整大小模式
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.BitMapDeal.PrintScreen(System.Drawing.Rectangle)">
            <summary>
            截取屏幕
            </summary>
            <param name="rect">开始截取位置</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.BitMapDeal.SelectionPrintScreen">
            <summary>
            区域截取屏幕
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.BitMapDeal.BitmapCut(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            取得圖象指定區域的信息，並創建為一個新的圖象返回。
            </summary>
            <param name="img">圖象。</param>
            <param name="x">圖象內起始的 X 坐標處。</param>
            <param name="y">圖象內起始的 Y 坐標處</param>
            <param name="width">需要獲得的區域寬度。</param>
            <param name="height">需要獲得的區域高度。</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.Win32Kernel.ScreenLibrary.BitMapDeal.GetScreenBitmap">
            <summary>
            截取屏幕图像。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY">
            <summary>
            资源目录
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY.Characteristics">
            <summary>
            标识此资源的类型,但通常为0
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY.TimeDateStamp">
            <summary>
            资源建立时间
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY.MajorVersion">
            <summary>
            版本号
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY.MinorVersion">
            <summary>
            次版本号
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY.NumberOfNamedEntries">
            <summary>
            使用名字资源条目的个数
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY.NumberOfIdEntries">
            <summary>
            使用ID数字资源条目的个数
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ImageResourceManager.FillItems">
            <summary>
            筛选出资源信息
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ThunkDataInfo.IsEmpty">
            <summary>
            是否已经为空值
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.Characteristics">
            <summary>
            没有用途，总是为0
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.TimeDateStamp">
            <summary>
            文件被产生时刻
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.MajorVersion">
            <summary>
            主版本号，总是为0
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.MinorVersion">
            <summary>
            次版本号总是为0
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.Name">
            <summary>
            RVA，指向一个DLL文件名称
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.Base">
            <summary>
            起始序号
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.NumberOfFunctions">
            <summary>
            输出函数个数
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.NumberOfNames">
            <summary>
            以名称输出的函数个数
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.AddressOfFunctions">
            <summary>
            RVA, 指向一个由函数地址构成的数组
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.AddressOfNames">
            <summary>
            RVA, 指向一个由字符串指针所构成的数组
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals">
            <summary>
            输出序数表的RAV
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_BASE_RELOCATIONS.IMAGE_BASE_RELOCATION">
            <summary>
            基址重定位
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_BASE_RELOCATIONS.IMAGE_BASE_RELOCATION.IsNull">
            <summary>
            判断此结构是否为空
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.#ctor(Buffalo.Win32Kernel.PELibrary.PEHandle,Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_DATA_DIRECTORY[])">
            <summary>
            加载数据目录表信息
            </summary>
            <param name="pe">pe信息</param>
            <param name="stm">流</param>
            <param name="dataDirectorys">数据目录表</param>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.LoadBoundImportDescriptors">
            <summary>
            加载输入表
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.LoadImportDescriptors">
            <summary>
            加载输入表
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.LoadExportDescriptors">
            <summary>
            加载输出表
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.LoadBaseRelocation">
            <summary>
            加载基址重定位
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.LoadResourceDirector">
            <summary>
            加载资源表
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.ImportDescriptors">
            <summary>
            输入表信息
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.ImageExportDirectory">
            <summary>
            输出表信息
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.BaseRelocation">
            <summary>
            基址重定位表
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.ResourceDirector">
            <summary>
            资源表
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.MachineType.Unknow">
            <summary>
            不知名处理器
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.MachineType.uintel80386">
            <summary>
            uintel 80386  处理器以上
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.MachineType.uintel80486">
            <summary>
            uintel 80486  处理器以上
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.MachineType.uintelPentium">
            <summary>
            uintel奔腾处理器以上
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.MachineType.R3000BigEndian">
            <summary>
            R3000(MIPS)处理器，big endian
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.MachineType.R3000LittleEndian">
            <summary>
            R3000(MIPS)处理器，little endian
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.MachineType.R4000LittleEndian">
            <summary>
            R4000(MIPS)处理器，little endian
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.MachineType.R10000LittleEndian">
            <summary>
            R10000(MIPS)处理器，little endian
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.MachineType.AXP">
            <summary>
             DEC Alpha AXP处理器
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.MachineType.IBMPowerPCLittleEndian">
            <summary>
            IBM Power PC，little endian
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_FILE_HEADER.Machine">
            <summary>
            运行平台
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_FILE_HEADER.NumberOfSections">
            <summary>
            文件的区块数目
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_FILE_HEADER.TimeDateStamp">
            <summary>
            文件的创建日期和时间
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_FILE_HEADER.PouinterToSymbolTable">
            <summary>
            指向符号表(用于调试)
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_FILE_HEADER.NumberOfSymbols">
            <summary>
            符号表中的符号个数(用于调试)
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_FILE_HEADER.SizeOfOptionalHeader">
            <summary>
            IMAGE_OPTIONAL_HEADER的结构大小
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.PEInfo.IMAGE_FILE_HEADER.Characteristics">
            <summary>
            文件属性
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_BASE_RELOCATIONS.ImageBaseRelocationOffestType">
            <summary>
            重定位类型
            </summary>
        </member>
        <member name="M:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_BASE_RELOCATIONS.ImageBaseRelocationOffestType.#ctor(System.UInt16,System.UInt32)">
            <summary>
            重定位信息
            </summary>
            <param name="offestValue">值</param>
            <param name="virtualAddress">重定位表的RVA</param>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_BASE_RELOCATIONS.ImageBaseRelocationOffestType.RelocatioType">
            <summary>
            重定位类型
            </summary>
        </member>
        <member name="P:Buffalo.Win32Kernel.PELibrary.PEInfo.PEDataDirectors.IMAGE_BASE_RELOCATIONS.ImageBaseRelocationOffestType.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="T:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType">
            <summary>
            资源类型
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.Unknow">
            <summary>
            无资源
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.Cursor">
            <summary>
            光标
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.Bitmap">
            <summary>
            位图
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.Menu">
            <summary>
            菜单
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.Dialog">
            <summary>
            对话框
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.String">
            <summary>
            字符串
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.FontDirectory">
            <summary>
            字体目录
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.Accelerators">
            <summary>
            加速键
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.Unformatted">
            <summary>
            未格式资源
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.MessageTable">
            <summary>
            消息表
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.GroupCursor">
            <summary>
            光标组
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.GroupIcon">
            <summary>
            图标组
            </summary>
        </member>
        <member name="F:Buffalo.Win32Kernel.PELibrary.Enums.ResourceType.VersionInformation">
            <summary>
            版本信息
            </summary>
        </member>
    </members>
</doc>
